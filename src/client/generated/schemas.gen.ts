// This file is auto-generated by @hey-api/openapi-ts

export const AthleteSearchResultSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    profile_medium: {
      type: "string",
    },
    city: {
      type: "string",
    },
    state: {
      type: "string",
    },
    country: {
      type: "string",
    },
    timezone: {
      type: "string",
    },
    sex: {
      type: "string",
    },
    bio: {
      type: "string",
    },
    website: {
      type: "string",
    },
    email: {
      type: "string",
    },
  },
} as const;

export const SharedEventSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int32",
    },
    external_id: {
      type: "string",
    },
    athlete_id: {
      type: "string",
    },
    category: {
      type: "string",
      enum: ["RACE", "WORKOUT"],
    },
    types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    name: {
      type: "string",
    },
    start_date_local: {
      type: "string",
    },
    visibility: {
      type: "string",
      enum: ["PUBLIC", "GROUP"],
    },
    chat_id: {
      type: "integer",
      format: "int32",
    },
    description: {
      type: "string",
    },
    website: {
      type: "string",
    },
    closing_date_local: {
      type: "string",
    },
    location: {
      type: "string",
    },
    address: {
      type: "string",
    },
    country: {
      type: "string",
    },
    region: {
      type: "string",
    },
    lat: {
      type: "number",
      format: "float",
    },
    lon: {
      type: "number",
      format: "float",
    },
    route_file: {
      type: "string",
    },
    polyline: {
      type: "string",
    },
    usage_count: {
      type: "integer",
      format: "int32",
    },
    owner: {
      $ref: "#/components/schemas/AthleteSearchResult",
    },
  },
} as const;

export const AttachmentSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    filename: {
      type: "string",
    },
    mimetype: {
      type: "string",
    },
    url: {
      type: "string",
    },
  },
} as const;

export const WorkoutExSchema = {
  type: "object",
  properties: {
    athlete_id: {
      type: "string",
    },
    id: {
      type: "integer",
      format: "int32",
    },
    icu_training_load: {
      type: "integer",
      format: "int32",
    },
    name: {
      type: "string",
    },
    description: {
      type: "string",
    },
    type: {
      type: "string",
    },
    indoor: {
      type: "boolean",
    },
    color: {
      type: "string",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    updated: {
      type: "string",
      format: "date-time",
    },
    joules: {
      type: "integer",
      format: "int32",
    },
    joules_above_ftp: {
      type: "integer",
      format: "int32",
    },
    workout_doc: {
      type: "object",
      additionalProperties: {
        type: "object",
      },
    },
    folder_id: {
      type: "integer",
      format: "int32",
    },
    day: {
      type: "integer",
      format: "int32",
    },
    days: {
      type: "integer",
      format: "int32",
    },
    plan_applied: {
      type: "string",
      format: "date-time",
    },
    hide_from_athlete: {
      type: "boolean",
    },
    target: {
      type: "string",
      enum: ["AUTO", "POWER", "HR", "PACE"],
    },
    targets: {
      type: "array",
      items: {
        type: "string",
        enum: ["AUTO", "POWER", "HR", "PACE"],
      },
    },
    carbs_per_hour: {
      type: "integer",
      format: "int32",
    },
    tags: {
      type: "array",
      items: {
        type: "string",
      },
    },
    attachments: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Attachment",
      },
    },
    time: {
      type: "string",
    },
    sub_type: {
      type: "string",
      enum: ["NONE", "COMMUTE", "WARMUP", "COOLDOWN", "RACE"],
    },
    for_week: {
      type: "boolean",
    },
    file_contents: {
      type: "string",
    },
    file_contents_base64: {
      type: "string",
    },
    filename: {
      type: "string",
    },
    distance: {
      type: "number",
      format: "float",
    },
    icu_intensity: {
      type: "number",
      format: "float",
    },
  },
} as const;

export const WorkoutSchema = {
  type: "object",
  properties: {
    athlete_id: {
      type: "string",
    },
    id: {
      type: "integer",
      format: "int32",
    },
    icu_training_load: {
      type: "integer",
      format: "int32",
    },
    name: {
      type: "string",
    },
    description: {
      type: "string",
    },
    type: {
      type: "string",
    },
    indoor: {
      type: "boolean",
    },
    color: {
      type: "string",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    updated: {
      type: "string",
      format: "date-time",
    },
    joules: {
      type: "integer",
      format: "int32",
    },
    joules_above_ftp: {
      type: "integer",
      format: "int32",
    },
    workout_doc: {
      type: "object",
      additionalProperties: {
        type: "object",
      },
    },
    folder_id: {
      type: "integer",
      format: "int32",
    },
    day: {
      type: "integer",
      format: "int32",
    },
    days: {
      type: "integer",
      format: "int32",
    },
    plan_applied: {
      type: "string",
      format: "date-time",
    },
    hide_from_athlete: {
      type: "boolean",
    },
    target: {
      type: "string",
      enum: ["AUTO", "POWER", "HR", "PACE"],
    },
    targets: {
      type: "array",
      items: {
        type: "string",
        enum: ["AUTO", "POWER", "HR", "PACE"],
      },
    },
    carbs_per_hour: {
      type: "integer",
      format: "int32",
    },
    tags: {
      type: "array",
      items: {
        type: "string",
      },
    },
    attachments: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Attachment",
      },
    },
    time: {
      type: "string",
    },
    sub_type: {
      type: "string",
      enum: ["NONE", "COMMUTE", "WARMUP", "COOLDOWN", "RACE"],
    },
    for_week: {
      type: "boolean",
    },
    distance: {
      type: "number",
      format: "float",
    },
    icu_intensity: {
      type: "number",
      format: "float",
    },
  },
} as const;

export const SportInfoSchema = {
  type: "object",
  properties: {
    type: {
      type: "string",
      enum: [
        "Ride",
        "Run",
        "Swim",
        "WeightTraining",
        "Hike",
        "Walk",
        "AlpineSki",
        "BackcountrySki",
        "Badminton",
        "Canoeing",
        "Crossfit",
        "EBikeRide",
        "EMountainBikeRide",
        "Elliptical",
        "Golf",
        "GravelRide",
        "TrackRide",
        "Handcycle",
        "HighIntensityIntervalTraining",
        "Hockey",
        "IceSkate",
        "InlineSkate",
        "Kayaking",
        "Kitesurf",
        "MountainBikeRide",
        "NordicSki",
        "OpenWaterSwim",
        "Padel",
        "Pilates",
        "Pickleball",
        "Racquetball",
        "Rugby",
        "RockClimbing",
        "RollerSki",
        "Rowing",
        "Sail",
        "Skateboard",
        "Snowboard",
        "Snowshoe",
        "Soccer",
        "Squash",
        "StairStepper",
        "StandUpPaddling",
        "Surfing",
        "TableTennis",
        "Tennis",
        "TrailRun",
        "Transition",
        "Velomobile",
        "VirtualRide",
        "VirtualRow",
        "VirtualRun",
        "WaterSport",
        "Wheelchair",
        "Windsurf",
        "Workout",
        "Yoga",
        "Other",
      ],
    },
    eftp: {
      type: "number",
      format: "float",
    },
  },
} as const;

export const WellnessSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    ctl: {
      type: "number",
      format: "float",
    },
    atl: {
      type: "number",
      format: "float",
    },
    rampRate: {
      type: "number",
      format: "float",
    },
    ctlLoad: {
      type: "number",
      format: "float",
    },
    atlLoad: {
      type: "number",
      format: "float",
    },
    sportInfo: {
      type: "array",
      items: {
        $ref: "#/components/schemas/SportInfo",
      },
    },
    updated: {
      type: "string",
      format: "date-time",
    },
    weight: {
      type: "number",
      format: "float",
    },
    restingHR: {
      type: "integer",
      format: "int32",
    },
    hrv: {
      type: "number",
      format: "float",
    },
    hrvSDNN: {
      type: "number",
      format: "float",
    },
    menstrualPhase: {
      type: "string",
      enum: ["PERIOD", "FOLLICULAR", "OVULATING", "LUTEAL", "NONE"],
    },
    menstrualPhasePredicted: {
      type: "string",
      enum: ["PERIOD", "FOLLICULAR", "OVULATING", "LUTEAL", "NONE"],
    },
    kcalConsumed: {
      type: "integer",
      format: "int32",
    },
    sleepSecs: {
      type: "integer",
      format: "int32",
    },
    sleepScore: {
      type: "number",
      format: "float",
    },
    sleepQuality: {
      type: "integer",
      format: "int32",
    },
    avgSleepingHR: {
      type: "number",
      format: "float",
    },
    soreness: {
      type: "integer",
      format: "int32",
    },
    fatigue: {
      type: "integer",
      format: "int32",
    },
    stress: {
      type: "integer",
      format: "int32",
    },
    mood: {
      type: "integer",
      format: "int32",
    },
    motivation: {
      type: "integer",
      format: "int32",
    },
    injury: {
      type: "integer",
      format: "int32",
    },
    spO2: {
      type: "number",
      format: "float",
    },
    systolic: {
      type: "integer",
      format: "int32",
    },
    diastolic: {
      type: "integer",
      format: "int32",
    },
    hydration: {
      type: "integer",
      format: "int32",
    },
    hydrationVolume: {
      type: "number",
      format: "float",
    },
    readiness: {
      type: "number",
      format: "float",
    },
    baevskySI: {
      type: "number",
      format: "float",
    },
    bloodGlucose: {
      type: "number",
      format: "float",
    },
    lactate: {
      type: "number",
      format: "float",
    },
    bodyFat: {
      type: "number",
      format: "float",
    },
    abdomen: {
      type: "number",
      format: "float",
    },
    vo2max: {
      type: "number",
      format: "float",
    },
    comments: {
      type: "string",
    },
    steps: {
      type: "integer",
      format: "int32",
    },
    respiration: {
      type: "number",
      format: "float",
    },
    locked: {
      type: "boolean",
    },
  },
} as const;

export const ForecastSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int32",
    },
    provider: {
      type: "string",
      enum: ["OPEN_WEATHER"],
    },
    location: {
      type: "string",
    },
    label: {
      type: "string",
    },
    lat: {
      type: "number",
      format: "float",
    },
    lon: {
      type: "number",
      format: "float",
    },
    enabled: {
      type: "boolean",
    },
  },
} as const;

export const WeatherConfigSchema = {
  type: "object",
  properties: {
    forecasts: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Forecast",
      },
    },
  },
} as const;

export const AthleteTrainingPlanUpdateSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    training_plan_id: {
      type: "integer",
      format: "int32",
    },
    training_plan_start_date: {
      type: "string",
    },
    training_plan_alias: {
      type: "string",
    },
  },
} as const;

export const AthleteTrainingPlanSchema = {
  type: "object",
  properties: {
    athlete_id: {
      type: "string",
    },
    training_plan_id: {
      type: "integer",
      format: "int32",
    },
    training_plan_start_date: {
      type: "string",
    },
    timezone: {
      type: "string",
    },
    training_plan_last_applied: {
      type: "string",
      format: "date-time",
    },
    training_plan: {
      $ref: "#/components/schemas/Folder",
    },
    training_plan_alias: {
      type: "string",
    },
  },
} as const;

export const FolderSchema = {
  type: "object",
  properties: {
    athlete_id: {
      type: "string",
    },
    id: {
      type: "integer",
      format: "int32",
    },
    type: {
      type: "string",
      enum: ["FOLDER", "PLAN"],
    },
    name: {
      type: "string",
    },
    description: {
      type: "string",
    },
    children: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Workout",
      },
    },
    visibility: {
      type: "string",
      enum: ["PRIVATE", "PUBLIC"],
    },
    start_date_local: {
      type: "string",
    },
    rollout_weeks: {
      type: "integer",
      format: "int32",
    },
    auto_rollout_day: {
      type: "integer",
      format: "int32",
    },
    read_only_workouts: {
      type: "boolean",
    },
    starting_ctl: {
      type: "integer",
      format: "int32",
    },
    starting_atl: {
      type: "integer",
      format: "int32",
    },
    activity_types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    num_workouts: {
      type: "integer",
      format: "int32",
    },
    duration_weeks: {
      type: "integer",
      format: "int32",
    },
    hours_per_week_min: {
      type: "integer",
      format: "int32",
    },
    hours_per_week_max: {
      type: "integer",
      format: "int32",
    },
    workout_targets: {
      type: "array",
      items: {
        type: "string",
        enum: ["AUTO", "POWER", "HR", "PACE"],
      },
    },
    blurb: {
      type: "string",
    },
    canEdit: {
      type: "boolean",
    },
    sharedWithCount: {
      type: "integer",
      format: "int32",
    },
    shareToken: {
      type: "string",
    },
    owner: {
      $ref: "#/components/schemas/AthleteSearchResult",
    },
  },
} as const;

export const AthleteRouteSchema = {
  type: "object",
  properties: {
    athlete_id: {
      type: "string",
    },
    route_id: {
      type: "integer",
      format: "int64",
    },
    name: {
      type: "string",
    },
    rename_activities: {
      type: "boolean",
    },
    commute: {
      type: "boolean",
    },
    tags: {
      type: "array",
      items: {
        type: "string",
      },
    },
    description: {
      type: "string",
    },
    replaced_by_route_id: {
      type: "integer",
      format: "int64",
    },
    latlngs: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "number",
          format: "float",
        },
      },
    },
  },
} as const;

export const GearReminderSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int32",
    },
    gear_id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    distance: {
      type: "number",
      format: "float",
    },
    time: {
      type: "number",
      format: "float",
    },
    activities: {
      type: "integer",
      format: "int32",
    },
    days: {
      type: "integer",
      format: "int32",
    },
    last_reset: {
      type: "string",
      format: "date-time",
    },
    starting_distance: {
      type: "number",
      format: "float",
    },
    starting_time: {
      type: "number",
      format: "float",
    },
    starting_activities: {
      type: "integer",
      format: "int32",
    },
    snoozed_until: {
      type: "string",
      format: "date-time",
    },
    percent_used: {
      type: "number",
      format: "float",
    },
    distance_used: {
      type: "number",
      format: "float",
    },
    time_used: {
      type: "number",
      format: "float",
    },
    activities_used: {
      type: "integer",
      format: "int32",
    },
    days_used: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const ActivityFilterSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int32",
    },
    field_id: {
      type: "string",
      enum: [
        "type",
        "indoor",
        "name",
        "notName",
        "description",
        "moving_time",
        "elapsed_time",
        "coasting_time",
        "distance",
        "climbing",
        "load",
        "source",
        "race",
        "average_heartrate",
        "max_heartrate",
        "hrrc",
        "average_power",
        "norm_power",
        "pace",
        "gap",
        "average_speed",
        "max_speed",
        "variability_index",
        "intensity",
        "average_cadence",
        "average_cadence_z2",
        "average_temp",
        "calories",
        "work",
        "work_above_ftp",
        "max_wbal_depletion",
        "efficiency",
        "power_hr",
        "power_hr_z2",
        "power_hr_z2_mins",
        "rpe",
        "feel",
        "session_rpe",
        "kg_lifted",
        "power_meter",
        "power_meter_serial",
        "gear_name",
        "trimp",
        "custom",
        "tags",
        "device_name",
        "compliance",
        "polarization_index",
        "day_of_week",
        "average_altitude",
        "min_altitude",
        "max_altitude",
        "start_time",
        "route_id",
      ],
    },
    code: {
      type: "string",
    },
    operator: {
      type: "string",
    },
    value: {
      type: "object",
    },
    not: {
      type: "boolean",
    },
  },
} as const;

export const GearSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    athlete_id: {
      type: "string",
    },
    type: {
      type: "string",
      enum: [
        "Bike",
        "Shoes",
        "Wetsuit",
        "RowingMachine",
        "Skis",
        "Snowboard",
        "Boat",
        "Board",
        "Equipment",
        "Accessories",
        "Apparel",
        "Computer",
        "Light",
        "Battery",
        "Brake",
        "BrakePads",
        "Rotor",
        "Drivetrain",
        "BottomBracket",
        "Cassette",
        "Chain",
        "Chainrings",
        "Crankset",
        "Derailleur",
        "Pedals",
        "Lever",
        "Cable",
        "Frame",
        "Fork",
        "Handlebar",
        "Headset",
        "Saddle",
        "Seatpost",
        "Shock",
        "Stem",
        "Axel",
        "Hub",
        "Trainer",
        "Tube",
        "Tyre",
        "Wheel",
        "Wheelset",
        "PowerMeter",
        "Cleats",
        "CyclingShoes",
        "Paddle",
      ],
    },
    name: {
      type: "string",
    },
    purchased: {
      type: "string",
    },
    notes: {
      type: "string",
    },
    distance: {
      type: "number",
      format: "float",
    },
    time: {
      type: "number",
      format: "float",
    },
    activities: {
      type: "integer",
      format: "int32",
    },
    use_elapsed_time: {
      type: "boolean",
    },
    retired: {
      type: "string",
    },
    component_ids: {
      type: "array",
      items: {
        type: "string",
      },
    },
    reminders: {
      type: "array",
      items: {
        $ref: "#/components/schemas/GearReminder",
      },
    },
    activity_filters: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ActivityFilter",
      },
    },
    component: {
      type: "boolean",
    },
  },
} as const;

export const SharedWithSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    profile_medium: {
      type: "string",
    },
    city: {
      type: "string",
    },
    state: {
      type: "string",
    },
    country: {
      type: "string",
    },
    timezone: {
      type: "string",
    },
    sex: {
      type: "string",
    },
    bio: {
      type: "string",
    },
    website: {
      type: "string",
    },
    email: {
      type: "string",
    },
    canEdit: {
      type: "boolean",
    },
  },
} as const;

export const EventExSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int32",
    },
    start_date_local: {
      type: "string",
    },
    icu_training_load: {
      type: "integer",
      format: "int32",
    },
    icu_atl: {
      type: "number",
      format: "float",
    },
    icu_ctl: {
      type: "number",
      format: "float",
    },
    type: {
      type: "string",
    },
    carbs_used: {
      type: "integer",
      format: "int32",
    },
    calendar_id: {
      type: "integer",
      format: "int32",
    },
    uid: {
      type: "string",
    },
    athlete_id: {
      type: "string",
    },
    category: {
      type: "string",
      enum: [
        "WORKOUT",
        "RACE_A",
        "RACE_B",
        "RACE_C",
        "NOTE",
        "HOLIDAY",
        "SICK",
        "INJURED",
        "SET_EFTP",
        "FITNESS_DAYS",
        "SEASON_START",
        "TARGET",
        "SET_FITNESS",
      ],
    },
    end_date_local: {
      type: "string",
    },
    name: {
      type: "string",
    },
    description: {
      type: "string",
    },
    indoor: {
      type: "boolean",
    },
    color: {
      type: "string",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    icu_ftp: {
      type: "integer",
      format: "int32",
    },
    atl_days: {
      type: "integer",
      format: "int32",
    },
    ctl_days: {
      type: "integer",
      format: "int32",
    },
    updated: {
      type: "string",
      format: "date-time",
    },
    not_on_fitness_chart: {
      type: "boolean",
    },
    show_as_note: {
      type: "boolean",
    },
    show_on_ctl_line: {
      type: "boolean",
    },
    for_week: {
      type: "boolean",
    },
    target: {
      type: "string",
      enum: ["AUTO", "POWER", "HR", "PACE"],
    },
    joules: {
      type: "integer",
      format: "int32",
    },
    joules_above_ftp: {
      type: "integer",
      format: "int32",
    },
    workout_doc: {
      type: "object",
      additionalProperties: {
        type: "object",
      },
    },
    push_errors: {
      type: "array",
      items: {
        $ref: "#/components/schemas/PushError",
      },
    },
    athlete_cannot_edit: {
      type: "boolean",
    },
    hide_from_athlete: {
      type: "boolean",
    },
    structure_read_only: {
      type: "boolean",
    },
    created_by_id: {
      type: "string",
    },
    shared_event_id: {
      type: "integer",
      format: "int32",
    },
    entered: {
      type: "boolean",
    },
    carbs_per_hour: {
      type: "integer",
      format: "int32",
    },
    sub_type: {
      type: "string",
      enum: ["NONE", "COMMUTE", "WARMUP", "COOLDOWN", "RACE"],
    },
    distance: {
      type: "number",
      format: "float",
    },
    tags: {
      type: "array",
      items: {
        type: "string",
      },
    },
    attachments: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Attachment",
      },
    },
    oauth_client_id: {
      type: "integer",
      format: "int32",
    },
    external_id: {
      type: "string",
    },
    load_target: {
      type: "integer",
      format: "int32",
    },
    time_target: {
      type: "integer",
      format: "int32",
    },
    distance_target: {
      type: "number",
      format: "float",
    },
    plan_athlete_id: {
      type: "string",
    },
    plan_folder_id: {
      type: "integer",
      format: "int32",
    },
    plan_workout_id: {
      type: "integer",
      format: "int32",
    },
    plan_applied: {
      type: "string",
      format: "date-time",
    },
    workout: {
      $ref: "#/components/schemas/Workout",
    },
    file_contents: {
      type: "string",
    },
    file_contents_base64: {
      type: "string",
    },
    filename: {
      type: "string",
    },
    icu_intensity: {
      type: "number",
      format: "float",
    },
  },
} as const;

export const PushErrorSchema = {
  type: "object",
  properties: {
    service: {
      type: "string",
    },
    message: {
      type: "string",
    },
    date: {
      type: "string",
      format: "date-time",
    },
  },
} as const;

export const EventSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int32",
    },
    start_date_local: {
      type: "string",
    },
    icu_training_load: {
      type: "integer",
      format: "int32",
    },
    icu_atl: {
      type: "number",
      format: "float",
    },
    icu_ctl: {
      type: "number",
      format: "float",
    },
    type: {
      type: "string",
    },
    carbs_used: {
      type: "integer",
      format: "int32",
    },
    calendar_id: {
      type: "integer",
      format: "int32",
    },
    uid: {
      type: "string",
    },
    athlete_id: {
      type: "string",
    },
    category: {
      type: "string",
      enum: [
        "WORKOUT",
        "RACE_A",
        "RACE_B",
        "RACE_C",
        "NOTE",
        "HOLIDAY",
        "SICK",
        "INJURED",
        "SET_EFTP",
        "FITNESS_DAYS",
        "SEASON_START",
        "TARGET",
        "SET_FITNESS",
      ],
    },
    end_date_local: {
      type: "string",
    },
    name: {
      type: "string",
    },
    description: {
      type: "string",
    },
    indoor: {
      type: "boolean",
    },
    color: {
      type: "string",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    icu_ftp: {
      type: "integer",
      format: "int32",
    },
    atl_days: {
      type: "integer",
      format: "int32",
    },
    ctl_days: {
      type: "integer",
      format: "int32",
    },
    updated: {
      type: "string",
      format: "date-time",
    },
    not_on_fitness_chart: {
      type: "boolean",
    },
    show_as_note: {
      type: "boolean",
    },
    show_on_ctl_line: {
      type: "boolean",
    },
    for_week: {
      type: "boolean",
    },
    target: {
      type: "string",
      enum: ["AUTO", "POWER", "HR", "PACE"],
    },
    joules: {
      type: "integer",
      format: "int32",
    },
    joules_above_ftp: {
      type: "integer",
      format: "int32",
    },
    workout_doc: {
      type: "object",
      additionalProperties: {
        type: "object",
      },
    },
    push_errors: {
      type: "array",
      items: {
        $ref: "#/components/schemas/PushError",
      },
    },
    athlete_cannot_edit: {
      type: "boolean",
    },
    hide_from_athlete: {
      type: "boolean",
    },
    structure_read_only: {
      type: "boolean",
    },
    created_by_id: {
      type: "string",
    },
    shared_event_id: {
      type: "integer",
      format: "int32",
    },
    entered: {
      type: "boolean",
    },
    carbs_per_hour: {
      type: "integer",
      format: "int32",
    },
    sub_type: {
      type: "string",
      enum: ["NONE", "COMMUTE", "WARMUP", "COOLDOWN", "RACE"],
    },
    distance: {
      type: "number",
      format: "float",
    },
    tags: {
      type: "array",
      items: {
        type: "string",
      },
    },
    attachments: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Attachment",
      },
    },
    oauth_client_id: {
      type: "integer",
      format: "int32",
    },
    external_id: {
      type: "string",
    },
    load_target: {
      type: "integer",
      format: "int32",
    },
    time_target: {
      type: "integer",
      format: "int32",
    },
    distance_target: {
      type: "number",
      format: "float",
    },
    plan_athlete_id: {
      type: "string",
    },
    plan_folder_id: {
      type: "integer",
      format: "int32",
    },
    plan_workout_id: {
      type: "integer",
      format: "int32",
    },
    plan_applied: {
      type: "string",
      format: "date-time",
    },
    icu_intensity: {
      type: "number",
      format: "float",
    },
  },
} as const;

export const DoomedEventSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int32",
    },
    external_id: {
      type: "string",
    },
  },
} as const;

export const DeleteEventsResponseSchema = {
  type: "object",
  properties: {
    eventsDeleted: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const CustomItemSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int32",
    },
    athlete_id: {
      type: "string",
    },
    type: {
      type: "string",
      enum: [
        "FITNESS_CHART",
        "TRACE_CHART",
        "INPUT_FIELD",
        "ACTIVITY_FIELD",
        "INTERVAL_FIELD",
        "ACTIVITY_STREAM",
        "ACTIVITY_CHART",
        "ACTIVITY_HISTOGRAM",
        "ACTIVITY_HEATMAP",
        "ACTIVITY_MAP",
        "ACTIVITY_PANEL",
      ],
    },
    visibility: {
      type: "string",
      enum: ["PRIVATE", "FOLLOWERS", "PUBLIC"],
    },
    name: {
      type: "string",
    },
    description: {
      type: "string",
    },
    image: {
      type: "string",
    },
    content: {
      type: "object",
      additionalProperties: {
        type: "object",
      },
    },
    usage_count: {
      type: "integer",
      format: "int32",
    },
    index: {
      type: "integer",
      format: "int32",
    },
    hide_script: {
      type: "boolean",
    },
    hidden_by_id: {
      type: "string",
    },
    updated: {
      type: "string",
      format: "date-time",
    },
    from_athlete: {
      $ref: "#/components/schemas/AthleteSearchResult",
    },
    from_id: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const AthleteUpdateDTOSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    firstname: {
      type: "string",
    },
    lastname: {
      type: "string",
    },
    profile_medium: {
      type: "string",
    },
    measurement_preference: {
      type: "string",
    },
    weight_pref_lb: {
      type: "boolean",
    },
    fahrenheit: {
      type: "boolean",
    },
    wind_speed: {
      type: "string",
      enum: ["MPS", "KNOTS", "KMH", "MPH", "BFT"],
    },
    rain: {
      type: "string",
      enum: ["MM", "INCHES"],
    },
    weight: {
      type: "number",
      format: "float",
    },
    email: {
      type: "string",
    },
    sex: {
      type: "string",
    },
    city: {
      type: "string",
    },
    state: {
      type: "string",
    },
    country: {
      type: "string",
    },
    bikes: {
      type: "array",
      items: {
        $ref: "#/components/schemas/StravaGear",
      },
    },
    shoes: {
      type: "array",
      items: {
        $ref: "#/components/schemas/StravaGear",
      },
    },
    timezone: {
      type: "string",
    },
    locale: {
      type: "string",
    },
    visibility: {
      type: "string",
      enum: ["PRIVATE", "PUBLIC", "HIDDEN"],
    },
    icu_resting_hr: {
      type: "integer",
      format: "int32",
    },
    icu_weight: {
      type: "number",
      format: "float",
    },
    icu_weight_sync: {
      type: "string",
      enum: ["NONE", "STRAVA"],
    },
    icu_last_seen: {
      type: "string",
      format: "date-time",
    },
    icu_activated: {
      type: "string",
      format: "date-time",
    },
    icu_queue_pos: {
      type: "integer",
      format: "int32",
    },
    icu_admin: {
      type: "boolean",
    },
    icu_friend_invite_token: {
      type: "string",
    },
    icu_permission: {
      type: "string",
      enum: ["NONE", "READ", "WRITE"],
    },
    icu_effort_secs: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    icu_coach: {
      type: "boolean",
    },
    bio: {
      type: "string",
    },
    website: {
      type: "string",
    },
    icu_date_of_birth: {
      type: "string",
    },
    icu_api_key: {
      type: "string",
    },
    icu_type_settings: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Settings",
      },
    },
    icu_form_as_percent: {
      type: "boolean",
    },
    icu_mmp_days: {
      type: "integer",
      format: "int32",
    },
    icu_wellness_prompt: {
      type: "boolean",
    },
    icu_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    icu_track_menstrual_cycle: {
      type: "boolean",
    },
    icu_menstrual_cycle_perm: {
      type: "string",
      enum: ["NONE", "READ", "WRITE"],
    },
    coach_ticks: {
      type: "array",
      items: {
        $ref: "#/components/schemas/CoachTick",
      },
    },
    icu_garmin_health: {
      type: "boolean",
    },
    icu_garmin_training: {
      type: "boolean",
    },
    icu_garmin_sync_activities: {
      type: "boolean",
    },
    garmin_sync_activity_types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    garmin_sync_after: {
      type: "string",
      format: "date-time",
    },
    icu_garmin_download_wellness: {
      type: "boolean",
    },
    icu_garmin_upload_workouts: {
      type: "boolean",
    },
    icu_garmin_outdoor_power_range: {
      type: "number",
      format: "float",
    },
    icu_garmin_hr_range: {
      type: "number",
      format: "float",
    },
    garmin_pace_range: {
      type: "number",
      format: "float",
    },
    garmin_power_target: {
      type: "string",
      enum: ["POWER_LAP", "POWER", "POWER_3S", "POWER_10S", "POWER_30S"],
    },
    icu_garmin_last_upload: {
      type: "string",
      format: "date-time",
    },
    icu_garmin_upload_filters: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ActivityFilter",
      },
    },
    icu_garmin_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    open_step_duration: {
      type: "integer",
      format: "int32",
    },
    polar_scope: {
      type: "string",
    },
    polar_sync_activities: {
      type: "boolean",
    },
    polar_sync_activity_types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    polar_download_wellness: {
      type: "boolean",
    },
    polar_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    suunto_scope: {
      type: "string",
    },
    suunto_user_id: {
      type: "string",
    },
    suunto_sync_activities: {
      type: "boolean",
    },
    suunto_sync_activity_types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    suunto_upload_workouts: {
      type: "boolean",
    },
    suunto_outdoor_power_range: {
      type: "number",
      format: "float",
    },
    suunto_hr_range: {
      type: "number",
      format: "float",
    },
    suunto_pace_range: {
      type: "number",
      format: "float",
    },
    suunto_last_upload: {
      type: "string",
      format: "date-time",
    },
    suunto_upload_filters: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ActivityFilter",
      },
    },
    suunto_download_wellness: {
      type: "boolean",
    },
    coros_user_id: {
      type: "string",
    },
    coros_sync_activities: {
      type: "boolean",
    },
    coros_upload_workouts: {
      type: "boolean",
    },
    coros_download_wellness: {
      type: "boolean",
    },
    coros_last_upload: {
      type: "string",
      format: "date-time",
    },
    zepp_user_id: {
      type: "string",
    },
    zepp_sync_activities: {
      type: "boolean",
    },
    zepp_upload_workouts: {
      type: "boolean",
    },
    zepp_download_wellness: {
      type: "boolean",
    },
    wahoo_user_id: {
      type: "string",
    },
    wahoo_sync_activities: {
      type: "boolean",
    },
    wahoo_upload_workouts: {
      type: "boolean",
    },
    zwift_user_id: {
      type: "string",
    },
    zwift_sync_activities: {
      type: "boolean",
    },
    zwift_upload_workouts: {
      type: "boolean",
    },
    dropbox_scope: {
      type: "string",
    },
    oura_scope: {
      type: "string",
    },
    oura_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    whoop_scope: {
      type: "string",
    },
    whoop_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    google_scope: {
      type: "string",
    },
    google_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    icu_email_verified: {
      type: "boolean",
    },
    icu_email_disabled: {
      type: "string",
    },
    icu_send_achievements: {
      type: "boolean",
    },
    icu_send_newsletter: {
      type: "boolean",
    },
    icu_send_private_chat: {
      type: "boolean",
    },
    icu_send_private_msg: {
      type: "boolean",
    },
    icu_send_follow_req: {
      type: "boolean",
    },
    icu_send_group_chat: {
      type: "boolean",
    },
    icu_send_group_msg: {
      type: "boolean",
    },
    icu_send_activity_chat: {
      type: "boolean",
    },
    icu_send_followed_activity_chat: {
      type: "boolean",
    },
    icu_send_coached_activity_chat: {
      type: "boolean",
    },
    icu_send_activity_msg: {
      type: "boolean",
    },
    icu_send_coach_me_req: {
      type: "boolean",
    },
    icu_send_gear_alerts: {
      type: "boolean",
    },
    icu_send_plan_for_week: {
      type: "boolean",
    },
    include_descr_in_plan_for_week: {
      type: "boolean",
    },
    icu_send_followed_new_activity: {
      type: "boolean",
    },
    icu_send_coached_new_activity: {
      type: "boolean",
    },
    icu_send_coach_tick: {
      type: "boolean",
    },
    strava_allowed: {
      type: "boolean",
    },
    strava_id: {
      type: "integer",
      format: "int32",
    },
    scope: {
      type: "string",
    },
    strava_sync_activities: {
      type: "boolean",
    },
    strava_sync_activity_types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    strava_sync_other_activities: {
      type: "boolean",
    },
    ignore_strava_gear: {
      type: "boolean",
    },
    update_strava_name: {
      type: "boolean",
    },
    add_weather_to_strava_descr: {
      type: "boolean",
    },
    height: {
      type: "number",
      format: "float",
    },
    height_units: {
      type: "string",
      enum: ["CM", "FEET"],
    },
    plan: {
      type: "string",
      enum: ["FREE", "PREMIUM", "SUPPORTER", "WHITELABEL"],
    },
    plan_expires: {
      type: "string",
      format: "date-time",
    },
    trial_end_date: {
      type: "string",
      format: "date-time",
    },
    sponsored_by_chat_id: {
      type: "integer",
      format: "int32",
    },
    has_password: {
      type: "boolean",
    },
    beta_user: {
      type: "boolean",
    },
    currency: {
      type: "string",
    },
    training_plan_id: {
      type: "integer",
      format: "int32",
    },
    training_plan_start_date: {
      type: "string",
    },
    recalcHrZones: {
      type: "boolean",
    },
    applyToAll: {
      type: "boolean",
    },
    localDate: {
      type: "string",
    },
    password: {
      type: "string",
    },
    strava_authorized: {
      type: "boolean",
    },
  },
} as const;

export const CoachTickSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int32",
    },
    text: {
      type: "string",
    },
  },
} as const;

export const SettingsSchema = {
  type: "object",
  properties: {
    type: {
      type: "string",
      enum: [
        "Ride",
        "Run",
        "Swim",
        "WeightTraining",
        "Hike",
        "Walk",
        "AlpineSki",
        "BackcountrySki",
        "Badminton",
        "Canoeing",
        "Crossfit",
        "EBikeRide",
        "EMountainBikeRide",
        "Elliptical",
        "Golf",
        "GravelRide",
        "TrackRide",
        "Handcycle",
        "HighIntensityIntervalTraining",
        "Hockey",
        "IceSkate",
        "InlineSkate",
        "Kayaking",
        "Kitesurf",
        "MountainBikeRide",
        "NordicSki",
        "OpenWaterSwim",
        "Padel",
        "Pilates",
        "Pickleball",
        "Racquetball",
        "Rugby",
        "RockClimbing",
        "RollerSki",
        "Rowing",
        "Sail",
        "Skateboard",
        "Snowboard",
        "Snowshoe",
        "Soccer",
        "Squash",
        "StairStepper",
        "StandUpPaddling",
        "Surfing",
        "TableTennis",
        "Tennis",
        "TrailRun",
        "Transition",
        "Velomobile",
        "VirtualRide",
        "VirtualRow",
        "VirtualRun",
        "WaterSport",
        "Wheelchair",
        "Windsurf",
        "Workout",
        "Yoga",
        "Other",
      ],
    },
    ctlFactor: {
      type: "number",
      format: "double",
    },
    atlFactor: {
      type: "number",
      format: "double",
    },
  },
} as const;

export const StravaGearSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    distance: {
      type: "number",
      format: "float",
    },
    primary: {
      type: "boolean",
    },
  },
} as const;

export const AthleteSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    firstname: {
      type: "string",
    },
    lastname: {
      type: "string",
    },
    profile_medium: {
      type: "string",
    },
    measurement_preference: {
      type: "string",
    },
    weight_pref_lb: {
      type: "boolean",
    },
    fahrenheit: {
      type: "boolean",
    },
    wind_speed: {
      type: "string",
      enum: ["MPS", "KNOTS", "KMH", "MPH", "BFT"],
    },
    rain: {
      type: "string",
      enum: ["MM", "INCHES"],
    },
    weight: {
      type: "number",
      format: "float",
    },
    email: {
      type: "string",
    },
    sex: {
      type: "string",
    },
    city: {
      type: "string",
    },
    state: {
      type: "string",
    },
    country: {
      type: "string",
    },
    bikes: {
      type: "array",
      items: {
        $ref: "#/components/schemas/StravaGear",
      },
    },
    shoes: {
      type: "array",
      items: {
        $ref: "#/components/schemas/StravaGear",
      },
    },
    timezone: {
      type: "string",
    },
    locale: {
      type: "string",
    },
    visibility: {
      type: "string",
      enum: ["PRIVATE", "PUBLIC", "HIDDEN"],
    },
    icu_resting_hr: {
      type: "integer",
      format: "int32",
    },
    icu_weight: {
      type: "number",
      format: "float",
    },
    icu_weight_sync: {
      type: "string",
      enum: ["NONE", "STRAVA"],
    },
    icu_last_seen: {
      type: "string",
      format: "date-time",
    },
    icu_activated: {
      type: "string",
      format: "date-time",
    },
    icu_queue_pos: {
      type: "integer",
      format: "int32",
    },
    icu_admin: {
      type: "boolean",
    },
    icu_friend_invite_token: {
      type: "string",
    },
    icu_permission: {
      type: "string",
      enum: ["NONE", "READ", "WRITE"],
    },
    icu_effort_secs: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    icu_coach: {
      type: "boolean",
    },
    bio: {
      type: "string",
    },
    website: {
      type: "string",
    },
    icu_date_of_birth: {
      type: "string",
    },
    icu_api_key: {
      type: "string",
    },
    icu_type_settings: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Settings",
      },
    },
    icu_form_as_percent: {
      type: "boolean",
    },
    icu_mmp_days: {
      type: "integer",
      format: "int32",
    },
    icu_wellness_prompt: {
      type: "boolean",
    },
    icu_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    icu_track_menstrual_cycle: {
      type: "boolean",
    },
    icu_menstrual_cycle_perm: {
      type: "string",
      enum: ["NONE", "READ", "WRITE"],
    },
    coach_ticks: {
      type: "array",
      items: {
        $ref: "#/components/schemas/CoachTick",
      },
    },
    icu_garmin_health: {
      type: "boolean",
    },
    icu_garmin_training: {
      type: "boolean",
    },
    icu_garmin_sync_activities: {
      type: "boolean",
    },
    garmin_sync_activity_types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    garmin_sync_after: {
      type: "string",
      format: "date-time",
    },
    icu_garmin_download_wellness: {
      type: "boolean",
    },
    icu_garmin_upload_workouts: {
      type: "boolean",
    },
    icu_garmin_outdoor_power_range: {
      type: "number",
      format: "float",
    },
    icu_garmin_hr_range: {
      type: "number",
      format: "float",
    },
    garmin_pace_range: {
      type: "number",
      format: "float",
    },
    garmin_power_target: {
      type: "string",
      enum: ["POWER_LAP", "POWER", "POWER_3S", "POWER_10S", "POWER_30S"],
    },
    icu_garmin_last_upload: {
      type: "string",
      format: "date-time",
    },
    icu_garmin_upload_filters: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ActivityFilter",
      },
    },
    icu_garmin_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    open_step_duration: {
      type: "integer",
      format: "int32",
    },
    polar_scope: {
      type: "string",
    },
    polar_sync_activities: {
      type: "boolean",
    },
    polar_sync_activity_types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    polar_download_wellness: {
      type: "boolean",
    },
    polar_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    suunto_scope: {
      type: "string",
    },
    suunto_user_id: {
      type: "string",
    },
    suunto_sync_activities: {
      type: "boolean",
    },
    suunto_sync_activity_types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    suunto_upload_workouts: {
      type: "boolean",
    },
    suunto_outdoor_power_range: {
      type: "number",
      format: "float",
    },
    suunto_hr_range: {
      type: "number",
      format: "float",
    },
    suunto_pace_range: {
      type: "number",
      format: "float",
    },
    suunto_last_upload: {
      type: "string",
      format: "date-time",
    },
    suunto_upload_filters: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ActivityFilter",
      },
    },
    suunto_download_wellness: {
      type: "boolean",
    },
    coros_user_id: {
      type: "string",
    },
    coros_sync_activities: {
      type: "boolean",
    },
    coros_upload_workouts: {
      type: "boolean",
    },
    coros_download_wellness: {
      type: "boolean",
    },
    coros_last_upload: {
      type: "string",
      format: "date-time",
    },
    zepp_user_id: {
      type: "string",
    },
    zepp_sync_activities: {
      type: "boolean",
    },
    zepp_upload_workouts: {
      type: "boolean",
    },
    zepp_download_wellness: {
      type: "boolean",
    },
    wahoo_user_id: {
      type: "string",
    },
    wahoo_sync_activities: {
      type: "boolean",
    },
    wahoo_upload_workouts: {
      type: "boolean",
    },
    zwift_user_id: {
      type: "string",
    },
    zwift_sync_activities: {
      type: "boolean",
    },
    zwift_upload_workouts: {
      type: "boolean",
    },
    dropbox_scope: {
      type: "string",
    },
    oura_scope: {
      type: "string",
    },
    oura_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    whoop_scope: {
      type: "string",
    },
    whoop_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    google_scope: {
      type: "string",
    },
    google_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    icu_email_verified: {
      type: "boolean",
    },
    icu_email_disabled: {
      type: "string",
    },
    icu_send_achievements: {
      type: "boolean",
    },
    icu_send_newsletter: {
      type: "boolean",
    },
    icu_send_private_chat: {
      type: "boolean",
    },
    icu_send_private_msg: {
      type: "boolean",
    },
    icu_send_follow_req: {
      type: "boolean",
    },
    icu_send_group_chat: {
      type: "boolean",
    },
    icu_send_group_msg: {
      type: "boolean",
    },
    icu_send_activity_chat: {
      type: "boolean",
    },
    icu_send_followed_activity_chat: {
      type: "boolean",
    },
    icu_send_coached_activity_chat: {
      type: "boolean",
    },
    icu_send_activity_msg: {
      type: "boolean",
    },
    icu_send_coach_me_req: {
      type: "boolean",
    },
    icu_send_gear_alerts: {
      type: "boolean",
    },
    icu_send_plan_for_week: {
      type: "boolean",
    },
    include_descr_in_plan_for_week: {
      type: "boolean",
    },
    icu_send_followed_new_activity: {
      type: "boolean",
    },
    icu_send_coached_new_activity: {
      type: "boolean",
    },
    icu_send_coach_tick: {
      type: "boolean",
    },
    strava_allowed: {
      type: "boolean",
    },
    strava_id: {
      type: "integer",
      format: "int32",
    },
    scope: {
      type: "string",
    },
    strava_sync_activities: {
      type: "boolean",
    },
    strava_sync_activity_types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    strava_sync_other_activities: {
      type: "boolean",
    },
    ignore_strava_gear: {
      type: "boolean",
    },
    update_strava_name: {
      type: "boolean",
    },
    add_weather_to_strava_descr: {
      type: "boolean",
    },
    height: {
      type: "number",
      format: "float",
    },
    height_units: {
      type: "string",
      enum: ["CM", "FEET"],
    },
    plan: {
      type: "string",
      enum: ["FREE", "PREMIUM", "SUPPORTER", "WHITELABEL"],
    },
    plan_expires: {
      type: "string",
      format: "date-time",
    },
    trial_end_date: {
      type: "string",
      format: "date-time",
    },
    sponsored_by_chat_id: {
      type: "integer",
      format: "int32",
    },
    has_password: {
      type: "boolean",
    },
    beta_user: {
      type: "boolean",
    },
    currency: {
      type: "string",
    },
    training_plan_id: {
      type: "integer",
      format: "int32",
    },
    training_plan_start_date: {
      type: "string",
    },
    strava_authorized: {
      type: "boolean",
    },
  },
} as const;

export const ActivityChartsSchema = {
  type: "object",
  properties: {
    home: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Pos",
      },
    },
    power: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Pos",
      },
    },
    hr: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Pos",
      },
    },
    pace: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Pos",
      },
    },
    data: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Pos",
      },
    },
  },
} as const;

export const DisplaySchema = {
  type: "object",
  properties: {
    colorScheme: {
      type: "string",
    },
    lowIntensity: {
      type: "integer",
      format: "int32",
    },
    highIntensity: {
      type: "integer",
      format: "int32",
    },
    lowLoad: {
      type: "integer",
      format: "int32",
    },
    highLoad: {
      type: "integer",
      format: "int32",
    },
    usePairedWorkoutColor: {
      type: "boolean",
    },
    ignoreWorkoutColors: {
      type: "boolean",
    },
    showAverageHR: {
      type: "boolean",
    },
    showNormalizedWatts: {
      type: "boolean",
    },
    showLoad: {
      type: "boolean",
    },
    showWork: {
      type: "boolean",
    },
    showWorkAboveFTP: {
      type: "boolean",
    },
    showWeightLifted: {
      type: "boolean",
    },
    showAveragePower: {
      type: "boolean",
    },
    showRPE: {
      type: "boolean",
    },
    showFeel: {
      type: "boolean",
    },
    showPace: {
      type: "boolean",
    },
    showGAP: {
      type: "boolean",
    },
    showIntensity: {
      type: "boolean",
    },
    showName: {
      type: "boolean",
    },
    showIntervals: {
      type: "boolean",
    },
    showSkylineChart: {
      type: "boolean",
    },
    showPairedWorkoutChart: {
      type: "boolean",
    },
    showDescription: {
      type: "boolean",
    },
    showStartTime: {
      type: "boolean",
    },
    preciseDistance: {
      type: "boolean",
    },
    shrinkWarmup: {
      type: "boolean",
    },
    shrinkCooldown: {
      type: "boolean",
    },
    shrinkCommute: {
      type: "boolean",
    },
    color: {
      type: "string",
    },
    color2: {
      type: "string",
    },
  },
} as const;

export const PosSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    width: {
      type: "string",
    },
    height: {
      type: "string",
    },
  },
} as const;

export const PowerModelSchema = {
  type: "object",
  properties: {
    type: {
      type: "string",
      enum: ["MS_2P", "MORTON_3P", "FFT_CURVES", "ECP"],
    },
    criticalPower: {
      type: "integer",
      format: "int32",
    },
    wPrime: {
      type: "integer",
      format: "int32",
    },
    pMax: {
      type: "integer",
      format: "int32",
    },
    inputPointIndexes: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    ftp: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const SportSettingsSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int32",
    },
    athlete_id: {
      type: "string",
    },
    types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    warmup_time: {
      type: "integer",
      format: "int32",
    },
    cooldown_time: {
      type: "integer",
      format: "int32",
    },
    ftp: {
      type: "integer",
      format: "int32",
    },
    indoor_ftp: {
      type: "integer",
      format: "int32",
    },
    w_prime: {
      type: "integer",
      format: "int32",
    },
    power_zones: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    sweet_spot_min: {
      type: "integer",
      format: "int32",
    },
    sweet_spot_max: {
      type: "integer",
      format: "int32",
    },
    power_spike_threshold: {
      type: "integer",
      format: "int32",
    },
    power_zone_names: {
      type: "array",
      items: {
        type: "string",
      },
    },
    ftp_est_min_secs: {
      type: "integer",
      format: "int32",
    },
    use_laps_for_power_intervals: {
      type: "boolean",
    },
    keep_all_laps_for_power_intervals: {
      type: "boolean",
    },
    after_kj0: {
      type: "integer",
      format: "int32",
    },
    after_kj1: {
      type: "integer",
      format: "int32",
    },
    power_field: {
      type: "string",
    },
    lthr: {
      type: "integer",
      format: "int32",
    },
    max_hr: {
      type: "integer",
      format: "int32",
    },
    hr_zones: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    hr_zone_names: {
      type: "array",
      items: {
        type: "string",
      },
    },
    hr_load_type: {
      type: "string",
      enum: ["AVG_HR", "HR_ZONES", "HRSS"],
    },
    hrrc_min_percent: {
      type: "number",
      format: "float",
    },
    threshold_pace: {
      type: "number",
      format: "float",
    },
    pace_units: {
      type: "string",
      enum: ["SECS_100M", "SECS_100Y", "MINS_KM", "MINS_MILE", "SECS_500M"],
    },
    pace_zones: {
      type: "array",
      items: {
        type: "number",
        format: "float",
      },
    },
    pace_zone_names: {
      type: "array",
      items: {
        type: "string",
      },
    },
    pace_load_type: {
      type: "string",
      enum: ["SWIM", "RUN"],
    },
    gap_model: {
      type: "string",
      enum: ["NONE", "STRAVA_RUN"],
    },
    elevation_correction: {
      type: "string",
      enum: ["NO", "AUTO", "YES"],
    },
    use_gap_zone_times: {
      type: "boolean",
    },
    best_effort_distances: {
      type: "array",
      items: {
        type: "number",
        format: "float",
      },
    },
    pace_curve_start: {
      type: "number",
      format: "float",
    },
    load_order: {
      type: "string",
      enum: [
        "POWER_HR_PACE",
        "POWER_PACE_HR",
        "HR_POWER_PACE",
        "HR_PACE_POWER",
        "PACE_POWER_HR",
        "PACE_HR_POWER",
      ],
    },
    tiz_order: {
      type: "string",
      enum: [
        "POWER_HR_PACE",
        "POWER_PACE_HR",
        "HR_POWER_PACE",
        "HR_PACE_POWER",
        "PACE_POWER_HR",
        "PACE_HR_POWER",
      ],
    },
    workout_order: {
      type: "string",
      enum: [
        "POWER_HR_PACE",
        "POWER_PACE_HR",
        "HR_POWER_PACE",
        "HR_PACE_POWER",
        "PACE_POWER_HR",
        "PACE_HR_POWER",
      ],
    },
    interval_display: {
      type: "string",
      enum: [
        "POWER_HR_PACE",
        "POWER_PACE_HR",
        "HR_POWER_PACE",
        "HR_PACE_POWER",
        "PACE_POWER_HR",
        "PACE_HR_POWER",
      ],
    },
    default_gear_id: {
      type: "string",
    },
    default_indoor_gear_id: {
      type: "string",
    },
    extract_workouts: {
      type: "boolean",
    },
    show_pauses: {
      type: "integer",
      format: "int32",
    },
    ignore_velocity: {
      type: "boolean",
    },
    default_workout_time: {
      type: "string",
    },
    created: {
      type: "string",
      format: "date-time",
    },
    updated: {
      type: "string",
      format: "date-time",
    },
    mmp_model: {
      $ref: "#/components/schemas/PowerModel",
    },
    display: {
      $ref: "#/components/schemas/Display",
    },
    activity_field_ids: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    activity_charts: {
      $ref: "#/components/schemas/ActivityCharts",
    },
    other: {
      type: "boolean",
    },
    iseFTPSupported: {
      type: "boolean",
    },
    use_distance_for_intervals: {
      type: "boolean",
    },
  },
} as const;

export const IntervalSchema = {
  type: "object",
  properties: {
    start_index: {
      type: "integer",
      format: "int32",
    },
    distance: {
      type: "number",
      format: "float",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    elapsed_time: {
      type: "integer",
      format: "int32",
    },
    average_watts: {
      type: "integer",
      format: "int32",
    },
    average_watts_alt: {
      type: "integer",
      format: "int32",
    },
    average_watts_alt_acc: {
      type: "integer",
      format: "int32",
    },
    min_watts: {
      type: "integer",
      format: "int32",
    },
    max_watts: {
      type: "integer",
      format: "int32",
    },
    average_watts_kg: {
      type: "number",
      format: "float",
    },
    max_watts_kg: {
      type: "number",
      format: "float",
    },
    intensity: {
      type: "integer",
      format: "int32",
    },
    w5s_variability: {
      type: "number",
      format: "float",
    },
    weighted_average_watts: {
      type: "integer",
      format: "int32",
    },
    training_load: {
      type: "number",
      format: "float",
    },
    joules: {
      type: "integer",
      format: "int32",
    },
    joules_above_ftp: {
      type: "integer",
      format: "int32",
    },
    decoupling: {
      type: "number",
      format: "float",
    },
    avg_lr_balance: {
      type: "number",
      format: "float",
    },
    average_dfa_a1: {
      type: "number",
      format: "float",
    },
    average_epoc: {
      type: "number",
      format: "float",
    },
    wbal_start: {
      type: "integer",
      format: "int32",
    },
    wbal_end: {
      type: "integer",
      format: "int32",
    },
    average_respiration: {
      type: "number",
      format: "float",
    },
    average_tidal_volume: {
      type: "number",
      format: "float",
    },
    average_tidal_volume_min: {
      type: "number",
      format: "float",
    },
    zone: {
      type: "integer",
      format: "int32",
    },
    zone_min_watts: {
      type: "integer",
      format: "int32",
    },
    zone_max_watts: {
      type: "integer",
      format: "int32",
    },
    average_speed: {
      type: "number",
      format: "float",
    },
    min_speed: {
      type: "number",
      format: "float",
    },
    max_speed: {
      type: "number",
      format: "float",
    },
    gap: {
      type: "number",
      format: "float",
    },
    average_heartrate: {
      type: "integer",
      format: "int32",
    },
    min_heartrate: {
      type: "integer",
      format: "int32",
    },
    max_heartrate: {
      type: "integer",
      format: "int32",
    },
    average_cadence: {
      type: "number",
      format: "float",
    },
    min_cadence: {
      type: "integer",
      format: "int32",
    },
    max_cadence: {
      type: "integer",
      format: "int32",
    },
    average_torque: {
      type: "number",
      format: "float",
    },
    min_torque: {
      type: "number",
      format: "float",
    },
    max_torque: {
      type: "number",
      format: "float",
    },
    total_elevation_gain: {
      type: "number",
      format: "float",
    },
    min_altitude: {
      type: "number",
      format: "float",
    },
    max_altitude: {
      type: "number",
      format: "float",
    },
    average_gradient: {
      type: "number",
      format: "float",
    },
    average_smo2: {
      type: "number",
      format: "float",
    },
    average_thb: {
      type: "number",
      format: "float",
    },
    average_smo2_2: {
      type: "number",
      format: "float",
    },
    average_thb_2: {
      type: "number",
      format: "float",
    },
    average_temp: {
      type: "number",
      format: "float",
    },
    average_weather_temp: {
      type: "number",
      format: "float",
    },
    average_feels_like: {
      type: "number",
      format: "float",
    },
    average_wind_speed: {
      type: "number",
      format: "float",
    },
    average_wind_gust: {
      type: "number",
      format: "float",
    },
    prevailing_wind_deg: {
      type: "integer",
      format: "int32",
    },
    average_yaw: {
      type: "number",
      format: "float",
    },
    headwind_percent: {
      type: "number",
      format: "float",
    },
    tailwind_percent: {
      type: "number",
      format: "float",
    },
    id: {
      type: "integer",
      format: "int32",
    },
    type: {
      type: "string",
      enum: ["RECOVERY", "WORK"],
    },
    end_index: {
      type: "integer",
      format: "int32",
    },
    group_id: {
      type: "string",
    },
    segment_effort_ids: {
      type: "array",
      items: {
        type: "integer",
        format: "int64",
      },
    },
    start_time: {
      type: "integer",
      format: "int32",
    },
    end_time: {
      type: "integer",
      format: "int32",
    },
    label: {
      type: "string",
    },
    average_stride: {
      type: "number",
      format: "float",
    },
  },
} as const;

export const IntervalGroupSchema = {
  type: "object",
  properties: {
    start_index: {
      type: "integer",
      format: "int32",
    },
    distance: {
      type: "number",
      format: "float",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    elapsed_time: {
      type: "integer",
      format: "int32",
    },
    average_watts: {
      type: "integer",
      format: "int32",
    },
    average_watts_alt: {
      type: "integer",
      format: "int32",
    },
    average_watts_alt_acc: {
      type: "integer",
      format: "int32",
    },
    min_watts: {
      type: "integer",
      format: "int32",
    },
    max_watts: {
      type: "integer",
      format: "int32",
    },
    average_watts_kg: {
      type: "number",
      format: "float",
    },
    max_watts_kg: {
      type: "number",
      format: "float",
    },
    intensity: {
      type: "integer",
      format: "int32",
    },
    w5s_variability: {
      type: "number",
      format: "float",
    },
    weighted_average_watts: {
      type: "integer",
      format: "int32",
    },
    training_load: {
      type: "number",
      format: "float",
    },
    joules: {
      type: "integer",
      format: "int32",
    },
    joules_above_ftp: {
      type: "integer",
      format: "int32",
    },
    decoupling: {
      type: "number",
      format: "float",
    },
    avg_lr_balance: {
      type: "number",
      format: "float",
    },
    average_dfa_a1: {
      type: "number",
      format: "float",
    },
    average_epoc: {
      type: "number",
      format: "float",
    },
    wbal_start: {
      type: "integer",
      format: "int32",
    },
    wbal_end: {
      type: "integer",
      format: "int32",
    },
    average_respiration: {
      type: "number",
      format: "float",
    },
    average_tidal_volume: {
      type: "number",
      format: "float",
    },
    average_tidal_volume_min: {
      type: "number",
      format: "float",
    },
    zone: {
      type: "integer",
      format: "int32",
    },
    zone_min_watts: {
      type: "integer",
      format: "int32",
    },
    zone_max_watts: {
      type: "integer",
      format: "int32",
    },
    average_speed: {
      type: "number",
      format: "float",
    },
    min_speed: {
      type: "number",
      format: "float",
    },
    max_speed: {
      type: "number",
      format: "float",
    },
    gap: {
      type: "number",
      format: "float",
    },
    average_heartrate: {
      type: "integer",
      format: "int32",
    },
    min_heartrate: {
      type: "integer",
      format: "int32",
    },
    max_heartrate: {
      type: "integer",
      format: "int32",
    },
    average_cadence: {
      type: "number",
      format: "float",
    },
    min_cadence: {
      type: "integer",
      format: "int32",
    },
    max_cadence: {
      type: "integer",
      format: "int32",
    },
    average_torque: {
      type: "number",
      format: "float",
    },
    min_torque: {
      type: "number",
      format: "float",
    },
    max_torque: {
      type: "number",
      format: "float",
    },
    total_elevation_gain: {
      type: "number",
      format: "float",
    },
    min_altitude: {
      type: "number",
      format: "float",
    },
    max_altitude: {
      type: "number",
      format: "float",
    },
    average_gradient: {
      type: "number",
      format: "float",
    },
    average_smo2: {
      type: "number",
      format: "float",
    },
    average_thb: {
      type: "number",
      format: "float",
    },
    average_smo2_2: {
      type: "number",
      format: "float",
    },
    average_thb_2: {
      type: "number",
      format: "float",
    },
    average_temp: {
      type: "number",
      format: "float",
    },
    average_weather_temp: {
      type: "number",
      format: "float",
    },
    average_feels_like: {
      type: "number",
      format: "float",
    },
    average_wind_speed: {
      type: "number",
      format: "float",
    },
    average_wind_gust: {
      type: "number",
      format: "float",
    },
    prevailing_wind_deg: {
      type: "integer",
      format: "int32",
    },
    average_yaw: {
      type: "number",
      format: "float",
    },
    headwind_percent: {
      type: "number",
      format: "float",
    },
    tailwind_percent: {
      type: "number",
      format: "float",
    },
    id: {
      type: "string",
    },
    count: {
      type: "integer",
      format: "int32",
    },
    average_stride: {
      type: "number",
      format: "float",
    },
  },
} as const;

export const IntervalsDTOSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    analyzed: {
      type: "string",
      format: "date-time",
    },
    icu_intervals: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Interval",
      },
    },
    icu_groups: {
      type: "array",
      items: {
        $ref: "#/components/schemas/IntervalGroup",
      },
    },
  },
} as const;

export const ActivitySchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    start_date_local: {
      type: "string",
    },
    type: {
      type: "string",
    },
    icu_ignore_time: {
      type: "boolean",
    },
    icu_pm_cp: {
      type: "integer",
      format: "int32",
    },
    icu_pm_w_prime: {
      type: "integer",
      format: "int32",
    },
    icu_pm_p_max: {
      type: "integer",
      format: "int32",
    },
    icu_pm_ftp: {
      type: "integer",
      format: "int32",
    },
    icu_pm_ftp_secs: {
      type: "integer",
      format: "int32",
    },
    icu_pm_ftp_watts: {
      type: "integer",
      format: "int32",
    },
    icu_ignore_power: {
      type: "boolean",
    },
    icu_rolling_cp: {
      type: "number",
      format: "float",
    },
    icu_rolling_w_prime: {
      type: "number",
      format: "float",
    },
    icu_rolling_p_max: {
      type: "number",
      format: "float",
    },
    icu_rolling_ftp: {
      type: "integer",
      format: "int32",
    },
    icu_rolling_ftp_delta: {
      type: "integer",
      format: "int32",
    },
    icu_training_load: {
      type: "integer",
      format: "int32",
    },
    icu_atl: {
      type: "number",
      format: "float",
    },
    icu_ctl: {
      type: "number",
      format: "float",
    },
    paired_event_id: {
      type: "integer",
      format: "int32",
    },
    icu_ftp: {
      type: "integer",
      format: "int32",
    },
    icu_joules: {
      type: "integer",
      format: "int32",
    },
    icu_recording_time: {
      type: "integer",
      format: "int32",
    },
    elapsed_time: {
      type: "integer",
      format: "int32",
    },
    icu_weighted_avg_watts: {
      type: "integer",
      format: "int32",
    },
    carbs_used: {
      type: "integer",
      format: "int32",
    },
    name: {
      type: "string",
    },
    description: {
      type: "string",
    },
    start_date: {
      type: "string",
    },
    distance: {
      type: "number",
      format: "float",
    },
    icu_distance: {
      type: "number",
      format: "float",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    coasting_time: {
      type: "integer",
      format: "int32",
    },
    total_elevation_gain: {
      type: "number",
      format: "float",
    },
    total_elevation_loss: {
      type: "number",
      format: "float",
    },
    timezone: {
      type: "string",
    },
    trainer: {
      type: "boolean",
    },
    sub_type: {
      type: "string",
      enum: ["NONE", "COMMUTE", "WARMUP", "COOLDOWN", "RACE"],
    },
    commute: {
      type: "boolean",
    },
    race: {
      type: "boolean",
    },
    max_speed: {
      type: "number",
      format: "float",
    },
    average_speed: {
      type: "number",
      format: "float",
    },
    device_watts: {
      type: "boolean",
    },
    has_heartrate: {
      type: "boolean",
    },
    max_heartrate: {
      type: "integer",
      format: "int32",
    },
    average_heartrate: {
      type: "integer",
      format: "int32",
    },
    average_cadence: {
      type: "number",
      format: "float",
    },
    calories: {
      type: "integer",
      format: "int32",
    },
    average_temp: {
      type: "number",
      format: "float",
    },
    min_temp: {
      type: "integer",
      format: "int32",
    },
    max_temp: {
      type: "integer",
      format: "int32",
    },
    avg_lr_balance: {
      type: "number",
      format: "float",
    },
    gap: {
      type: "number",
      format: "float",
    },
    gap_model: {
      type: "string",
      enum: ["NONE", "STRAVA_RUN"],
    },
    use_elevation_correction: {
      type: "boolean",
    },
    gear: {
      $ref: "#/components/schemas/StravaGear",
    },
    perceived_exertion: {
      type: "number",
      format: "float",
    },
    device_name: {
      type: "string",
    },
    power_meter: {
      type: "string",
    },
    power_meter_serial: {
      type: "string",
    },
    power_meter_battery: {
      type: "string",
    },
    crank_length: {
      type: "number",
      format: "float",
    },
    external_id: {
      type: "string",
    },
    file_sport_index: {
      type: "integer",
      format: "int32",
    },
    file_type: {
      type: "string",
    },
    icu_athlete_id: {
      type: "string",
    },
    created: {
      type: "string",
      format: "date-time",
    },
    icu_sync_date: {
      type: "string",
      format: "date-time",
    },
    analyzed: {
      type: "string",
      format: "date-time",
    },
    icu_w_prime: {
      type: "integer",
      format: "int32",
    },
    threshold_pace: {
      type: "number",
      format: "float",
    },
    icu_hr_zones: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    pace_zones: {
      type: "array",
      items: {
        type: "number",
        format: "float",
      },
    },
    lthr: {
      type: "integer",
      format: "int32",
    },
    icu_resting_hr: {
      type: "integer",
      format: "int32",
    },
    icu_weight: {
      type: "number",
      format: "float",
    },
    icu_power_zones: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    icu_sweet_spot_min: {
      type: "integer",
      format: "int32",
    },
    icu_sweet_spot_max: {
      type: "integer",
      format: "int32",
    },
    icu_power_spike_threshold: {
      type: "integer",
      format: "int32",
    },
    trimp: {
      type: "number",
      format: "float",
    },
    icu_warmup_time: {
      type: "integer",
      format: "int32",
    },
    icu_cooldown_time: {
      type: "integer",
      format: "int32",
    },
    icu_chat_id: {
      type: "integer",
      format: "int32",
    },
    icu_ignore_hr: {
      type: "boolean",
    },
    ignore_velocity: {
      type: "boolean",
    },
    ignore_pace: {
      type: "boolean",
    },
    ignore_parts: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Ignore",
      },
    },
    icu_training_load_data: {
      type: "integer",
      format: "int32",
    },
    interval_summary: {
      type: "array",
      items: {
        type: "string",
      },
    },
    skyline_chart_bytes: {
      type: "array",
      items: {
        type: "string",
        format: "byte",
      },
    },
    stream_types: {
      type: "array",
      items: {
        type: "string",
      },
    },
    has_weather: {
      type: "boolean",
    },
    has_segments: {
      type: "boolean",
    },
    power_field_names: {
      type: "array",
      items: {
        type: "string",
      },
    },
    power_field: {
      type: "string",
    },
    icu_zone_times: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ZoneTime",
      },
    },
    icu_hr_zone_times: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    pace_zone_times: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    gap_zone_times: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    use_gap_zone_times: {
      type: "boolean",
    },
    tiz_order: {
      type: "string",
      enum: [
        "POWER_HR_PACE",
        "POWER_PACE_HR",
        "HR_POWER_PACE",
        "HR_PACE_POWER",
        "PACE_POWER_HR",
        "PACE_HR_POWER",
      ],
    },
    polarization_index: {
      type: "number",
      format: "float",
    },
    icu_achievements: {
      type: "array",
      items: {
        $ref: "#/components/schemas/IcuAchievement",
      },
    },
    icu_intervals_edited: {
      type: "boolean",
    },
    lock_intervals: {
      type: "boolean",
    },
    icu_lap_count: {
      type: "integer",
      format: "int32",
    },
    icu_joules_above_ftp: {
      type: "integer",
      format: "int32",
    },
    icu_max_wbal_depletion: {
      type: "integer",
      format: "int32",
    },
    icu_hrr: {
      $ref: "#/components/schemas/HRRecovery",
    },
    icu_sync_error: {
      type: "string",
    },
    icu_color: {
      type: "string",
    },
    icu_power_hr_z2: {
      type: "number",
      format: "float",
    },
    icu_power_hr_z2_mins: {
      type: "integer",
      format: "int32",
    },
    icu_cadence_z2: {
      type: "integer",
      format: "int32",
    },
    icu_rpe: {
      type: "integer",
      format: "int32",
    },
    feel: {
      type: "integer",
      format: "int32",
    },
    kg_lifted: {
      type: "number",
      format: "float",
    },
    decoupling: {
      type: "number",
      format: "float",
    },
    icu_median_time_delta: {
      type: "integer",
      format: "int32",
    },
    p30s_exponent: {
      type: "number",
      format: "float",
    },
    workout_shift_secs: {
      type: "integer",
      format: "int32",
    },
    strava_id: {
      type: "string",
    },
    lengths: {
      type: "integer",
      format: "int32",
    },
    pool_length: {
      type: "number",
      format: "float",
    },
    compliance: {
      type: "number",
      format: "float",
    },
    coach_tick: {
      type: "integer",
      format: "int32",
    },
    source: {
      type: "string",
      enum: [
        "STRAVA",
        "UPLOAD",
        "MANUAL",
        "GARMIN_CONNECT",
        "OAUTH_CLIENT",
        "DROPBOX",
        "POLAR",
        "SUUNTO",
        "COROS",
        "WAHOO",
        "ZWIFT",
        "ZEPP",
      ],
    },
    oauth_client_id: {
      type: "integer",
      format: "int32",
    },
    oauth_client_name: {
      type: "string",
    },
    average_altitude: {
      type: "number",
      format: "float",
    },
    min_altitude: {
      type: "number",
      format: "float",
    },
    max_altitude: {
      type: "number",
      format: "float",
    },
    power_load: {
      type: "integer",
      format: "int32",
    },
    hr_load: {
      type: "integer",
      format: "int32",
    },
    pace_load: {
      type: "integer",
      format: "int32",
    },
    hr_load_type: {
      type: "string",
      enum: ["AVG_HR", "HR_ZONES", "HRSS"],
    },
    pace_load_type: {
      type: "string",
      enum: ["SWIM", "RUN"],
    },
    tags: {
      type: "array",
      items: {
        type: "string",
      },
    },
    attachments: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Attachment",
      },
    },
    recording_stops: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    average_weather_temp: {
      type: "number",
      format: "float",
    },
    min_weather_temp: {
      type: "number",
      format: "float",
    },
    max_weather_temp: {
      type: "number",
      format: "float",
    },
    average_feels_like: {
      type: "number",
      format: "float",
    },
    min_feels_like: {
      type: "number",
      format: "float",
    },
    max_feels_like: {
      type: "number",
      format: "float",
    },
    average_wind_speed: {
      type: "number",
      format: "float",
    },
    average_wind_gust: {
      type: "number",
      format: "float",
    },
    prevailing_wind_deg: {
      type: "integer",
      format: "int32",
    },
    headwind_percent: {
      type: "number",
      format: "float",
    },
    tailwind_percent: {
      type: "number",
      format: "float",
    },
    average_clouds: {
      type: "integer",
      format: "int32",
    },
    max_rain: {
      type: "number",
      format: "float",
    },
    max_snow: {
      type: "number",
      format: "float",
    },
    carbs_ingested: {
      type: "integer",
      format: "int32",
    },
    route_id: {
      type: "integer",
      format: "int64",
    },
    pace: {
      type: "number",
      format: "float",
    },
    athlete_max_hr: {
      type: "integer",
      format: "int32",
    },
    group: {
      type: "string",
    },
    icu_intensity: {
      type: "number",
      format: "float",
    },
    icu_efficiency_factor: {
      type: "number",
      format: "float",
    },
    icu_power_hr: {
      type: "number",
      format: "float",
    },
    session_rpe: {
      type: "integer",
      format: "int32",
    },
    average_stride: {
      type: "number",
      format: "float",
    },
    icu_average_watts: {
      type: "integer",
      format: "int32",
    },
    icu_variability_index: {
      type: "number",
      format: "float",
    },
  },
} as const;

export const DataCurvePtSchema = {
  type: "object",
  properties: {
    start_index: {
      type: "integer",
      format: "int32",
    },
    end_index: {
      type: "integer",
      format: "int32",
    },
    secs: {
      type: "integer",
      format: "int32",
    },
    value: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const HRRecoverySchema = {
  type: "object",
  properties: {
    start_index: {
      type: "integer",
      format: "int32",
    },
    end_index: {
      type: "integer",
      format: "int32",
    },
    start_time: {
      type: "integer",
      format: "int32",
    },
    end_time: {
      type: "integer",
      format: "int32",
    },
    start_bpm: {
      type: "integer",
      format: "int32",
    },
    end_bpm: {
      type: "integer",
      format: "int32",
    },
    average_watts: {
      type: "integer",
      format: "int32",
    },
    hrr: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const IcuAchievementSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    type: {
      type: "string",
      enum: ["BEST_POWER", "FTP_UP", "LTHR_UP", "BEST_PACE"],
    },
    message: {
      type: "string",
    },
    watts: {
      type: "integer",
      format: "int32",
    },
    secs: {
      type: "integer",
      format: "int32",
    },
    value: {
      type: "integer",
      format: "int32",
    },
    distance: {
      type: "number",
      format: "float",
    },
    pace: {
      type: "number",
      format: "float",
    },
    point: {
      $ref: "#/components/schemas/DataCurvePt",
    },
  },
} as const;

export const IgnoreSchema = {
  type: "object",
  properties: {
    start_index: {
      type: "integer",
      format: "int32",
    },
    end_index: {
      type: "integer",
      format: "int32",
    },
    power: {
      type: "boolean",
    },
    pace: {
      type: "boolean",
    },
    hr: {
      type: "boolean",
    },
  },
} as const;

export const ZoneTimeSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    secs: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const CreateFolderDTOSchema = {
  type: "object",
  properties: {
    athlete_id: {
      type: "string",
    },
    id: {
      type: "integer",
      format: "int32",
    },
    type: {
      type: "string",
      enum: ["FOLDER", "PLAN"],
    },
    name: {
      type: "string",
    },
    description: {
      type: "string",
    },
    children: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Workout",
      },
    },
    visibility: {
      type: "string",
      enum: ["PRIVATE", "PUBLIC"],
    },
    start_date_local: {
      type: "string",
    },
    rollout_weeks: {
      type: "integer",
      format: "int32",
    },
    auto_rollout_day: {
      type: "integer",
      format: "int32",
    },
    read_only_workouts: {
      type: "boolean",
    },
    starting_ctl: {
      type: "integer",
      format: "int32",
    },
    starting_atl: {
      type: "integer",
      format: "int32",
    },
    activity_types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    num_workouts: {
      type: "integer",
      format: "int32",
    },
    duration_weeks: {
      type: "integer",
      format: "int32",
    },
    hours_per_week_min: {
      type: "integer",
      format: "int32",
    },
    hours_per_week_max: {
      type: "integer",
      format: "int32",
    },
    workout_targets: {
      type: "array",
      items: {
        type: "string",
        enum: ["AUTO", "POWER", "HR", "PACE"],
      },
    },
    blurb: {
      type: "string",
    },
    canEdit: {
      type: "boolean",
    },
    sharedWithCount: {
      type: "integer",
      format: "int32",
    },
    shareToken: {
      type: "string",
    },
    owner: {
      $ref: "#/components/schemas/AthleteSearchResult",
    },
    copy_folder_id: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const DuplicateWorkoutsDTOSchema = {
  type: "object",
  properties: {
    numCopies: {
      type: "integer",
      format: "int32",
    },
    weeksBetween: {
      type: "integer",
      format: "int32",
    },
    workoutIds: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
  },
} as const;

export const DuplicateEventsDTOSchema = {
  type: "object",
  properties: {
    numCopies: {
      type: "integer",
      format: "int32",
    },
    weeksBetween: {
      type: "integer",
      format: "int32",
    },
    eventIds: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
  },
} as const;

export const ActivityIdSchema = {
  type: "object",
  properties: {
    icu_athlete_id: {
      type: "string",
    },
    id: {
      type: "string",
    },
  },
} as const;

export const UploadResponseSchema = {
  type: "object",
  properties: {
    icu_athlete_id: {
      type: "string",
    },
    id: {
      type: "string",
    },
    activities: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ActivityId",
      },
    },
  },
} as const;

export const NewActivityMsgSchema = {
  type: "object",
  properties: {
    content: {
      type: "string",
    },
  },
} as const;

export const ChatSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int32",
    },
    type: {
      type: "string",
      enum: ["PRIVATE", "GROUP", "ACTIVITY"],
    },
    coaching_group: {
      type: "string",
      format: "date-time",
    },
    updated: {
      type: "string",
      format: "date-time",
    },
    name: {
      type: "string",
    },
    picture: {
      type: "string",
    },
    description: {
      type: "string",
    },
    url: {
      type: "string",
    },
    slug: {
      type: "string",
    },
    pub: {
      type: "boolean",
    },
    join_policy: {
      type: "string",
      enum: ["OPEN", "ASK", "INVITE_ONLY"],
    },
    sidebar_logo: {
      type: "string",
    },
    sidebar_color: {
      type: "string",
    },
    sidebar_dark: {
      type: "boolean",
    },
    sidebar_top_color: {
      type: "string",
    },
    hide_members: {
      type: "boolean",
    },
    primary_group: {
      type: "boolean",
    },
    coins: {
      type: "number",
      format: "float",
    },
    members: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ChatMember",
      },
    },
    athlete_id: {
      type: "string",
    },
    activity_id: {
      type: "string",
    },
    other_athlete_id: {
      type: "string",
    },
    other_athlete_sex: {
      type: "string",
    },
    follows_you: {
      type: "string",
    },
    you_follow: {
      type: "string",
    },
    role: {
      type: "string",
      enum: ["MEMBER", "FOLLOWER", "COACH", "ADMIN"],
    },
    new_message_count: {
      type: "integer",
      format: "int32",
    },
    kicked: {
      type: "string",
      format: "date-time",
    },
    kicked_by_id: {
      type: "string",
    },
    last_seen_message_id: {
      type: "integer",
      format: "int64",
    },
    mute_until: {
      type: "string",
      format: "date-time",
    },
    sharedFolders: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Folder",
      },
    },
  },
} as const;

export const ChatMemberSchema = {
  type: "object",
  properties: {
    athlete_id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    profile_medium: {
      type: "string",
    },
    role: {
      type: "string",
      enum: ["MEMBER", "FOLLOWER", "COACH", "ADMIN"],
    },
    coach: {
      type: "boolean",
    },
    plan: {
      type: "string",
      enum: ["FREE", "PREMIUM", "SUPPORTER", "WHITELABEL"],
    },
    accepted_coaching_group: {
      type: "string",
      format: "date-time",
    },
  },
} as const;

export const NewMsgSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int64",
    },
    new_chat: {
      $ref: "#/components/schemas/Chat",
    },
  },
} as const;

export const PaceDistancesDTOSchema = {
  type: "object",
  properties: {
    distances: {
      type: "array",
      items: {
        type: "number",
        format: "float",
      },
    },
    defaults: {
      type: "array",
      items: {
        type: "number",
        format: "float",
      },
    },
  },
} as const;

export const WeatherDTOSchema = {
  type: "object",
  properties: {
    forecasts: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Forecast",
      },
    },
  },
} as const;

export const RouteSimilaritySchema = {
  type: "object",
  properties: {
    route: {
      $ref: "#/components/schemas/AthleteRoute",
    },
    route_distance: {
      type: "number",
      format: "float",
    },
    route_activity_count: {
      type: "integer",
      format: "int32",
    },
    other: {
      $ref: "#/components/schemas/AthleteRoute",
    },
    other_distance: {
      type: "number",
      format: "float",
    },
    other_activity_count: {
      type: "integer",
      format: "int32",
    },
    similarity: {
      type: "number",
      format: "float",
    },
    bounds: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "number",
          format: "float",
        },
      },
    },
  },
} as const;

export const WithCountSchema = {
  type: "object",
  properties: {
    athlete_id: {
      type: "string",
    },
    route_id: {
      type: "integer",
      format: "int64",
    },
    name: {
      type: "string",
    },
    rename_activities: {
      type: "boolean",
    },
    commute: {
      type: "boolean",
    },
    tags: {
      type: "array",
      items: {
        type: "string",
      },
    },
    description: {
      type: "string",
    },
    replaced_by_route_id: {
      type: "integer",
      format: "int64",
    },
    latlngs: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "number",
          format: "float",
        },
      },
    },
    distance: {
      type: "number",
      format: "float",
    },
    activity_count: {
      type: "integer",
      format: "int32",
    },
    most_recent_id: {
      type: "string",
    },
    most_recent_start_date_local: {
      type: "string",
    },
    most_recent_type: {
      type: "string",
    },
  },
} as const;

export const AthleteProfileSchema = {
  type: "object",
  properties: {
    athlete: {
      $ref: "#/components/schemas/AthleteSearchResult",
    },
    sharedFolders: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Folder",
      },
    },
    customItems: {
      type: "array",
      items: {
        $ref: "#/components/schemas/CustomItem",
      },
    },
  },
} as const;

export const PowerHRCurveSchema = {
  type: "object",
  properties: {
    athleteId: {
      type: "string",
    },
    start: {
      type: "string",
    },
    end: {
      type: "string",
    },
    minWatts: {
      type: "integer",
      format: "int32",
    },
    maxWatts: {
      type: "integer",
      format: "int32",
    },
    bucketSize: {
      type: "integer",
      format: "int32",
    },
    bpm: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    cadence: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    minutes: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    lthr: {
      type: "integer",
      format: "int32",
    },
    max_hr: {
      type: "integer",
      format: "int32",
    },
    ftp: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const DataCurveSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    after_kj: {
      type: "integer",
      format: "int32",
    },
    filters: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ActivityFilter",
      },
    },
    label: {
      type: "string",
    },
    filter_label: {
      type: "string",
    },
    percentile: {
      type: "number",
      format: "float",
    },
    start_date_local: {
      type: "string",
    },
    end_date_local: {
      type: "string",
    },
    days: {
      type: "integer",
      format: "int32",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    training_load: {
      type: "integer",
      format: "int32",
    },
    weight: {
      type: "number",
      format: "float",
    },
    secs: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    distance: {
      type: "array",
      items: {
        type: "number",
        format: "float",
      },
    },
    values: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    submax_values: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "integer",
          format: "int32",
        },
      },
    },
    submax_activity_id: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "string",
        },
      },
    },
    start_index: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    end_index: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    activity_id: {
      type: "array",
      items: {
        type: "string",
      },
    },
  },
} as const;

export const DataCurveSetPowerCurveSchema = {
  type: "object",
  properties: {
    list: {
      type: "array",
      items: {
        $ref: "#/components/schemas/DataCurve",
      },
    },
    activities: {
      type: "object",
      additionalProperties: {
        $ref: "#/components/schemas/Activity",
      },
    },
  },
} as const;

export const DataCurveSetPaceCurveSchema = {
  type: "object",
  properties: {
    list: {
      type: "array",
      items: {
        $ref: "#/components/schemas/DataCurve",
      },
    },
    activities: {
      type: "object",
      additionalProperties: {
        $ref: "#/components/schemas/Activity",
      },
    },
  },
} as const;

export const DataCurveSetHRCurveSchema = {
  type: "object",
  properties: {
    list: {
      type: "array",
      items: {
        $ref: "#/components/schemas/DataCurve",
      },
    },
    activities: {
      type: "object",
      additionalProperties: {
        $ref: "#/components/schemas/Activity",
      },
    },
  },
} as const;

export const GearStatsSchema = {
  type: "object",
  properties: {
    distance: {
      type: "number",
      format: "float",
    },
    elapsed_time: {
      type: "number",
      format: "float",
    },
    moving_time: {
      type: "number",
      format: "float",
    },
    activities: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const CategorySummarySchema = {
  type: "object",
  properties: {
    count: {
      type: "integer",
      format: "int32",
    },
    time: {
      type: "integer",
      format: "int32",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    elapsed_time: {
      type: "integer",
      format: "int32",
    },
    calories: {
      type: "integer",
      format: "int32",
    },
    total_elevation_gain: {
      type: "number",
      format: "float",
    },
    training_load: {
      type: "integer",
      format: "int32",
    },
    srpe: {
      type: "integer",
      format: "int32",
    },
    distance: {
      type: "number",
      format: "float",
    },
    eftp: {
      type: "number",
      format: "float",
    },
    eftpPerKg: {
      type: "number",
      format: "float",
    },
    category: {
      type: "string",
      enum: [
        "Ride",
        "Run",
        "Swim",
        "WeightTraining",
        "Hike",
        "Walk",
        "AlpineSki",
        "BackcountrySki",
        "Badminton",
        "Canoeing",
        "Crossfit",
        "EBikeRide",
        "EMountainBikeRide",
        "Elliptical",
        "Golf",
        "GravelRide",
        "TrackRide",
        "Handcycle",
        "HighIntensityIntervalTraining",
        "Hockey",
        "IceSkate",
        "InlineSkate",
        "Kayaking",
        "Kitesurf",
        "MountainBikeRide",
        "NordicSki",
        "OpenWaterSwim",
        "Padel",
        "Pilates",
        "Pickleball",
        "Racquetball",
        "Rugby",
        "RockClimbing",
        "RollerSki",
        "Rowing",
        "Sail",
        "Skateboard",
        "Snowboard",
        "Snowshoe",
        "Soccer",
        "Squash",
        "StairStepper",
        "StandUpPaddling",
        "Surfing",
        "TableTennis",
        "Tennis",
        "TrailRun",
        "Transition",
        "Velomobile",
        "VirtualRide",
        "VirtualRow",
        "VirtualRun",
        "WaterSport",
        "Wheelchair",
        "Windsurf",
        "Workout",
        "Yoga",
        "Other",
      ],
    },
  },
} as const;

export const SummaryWithCatsSchema = {
  type: "object",
  properties: {
    count: {
      type: "integer",
      format: "int32",
    },
    time: {
      type: "integer",
      format: "int32",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    elapsed_time: {
      type: "integer",
      format: "int32",
    },
    calories: {
      type: "integer",
      format: "int32",
    },
    total_elevation_gain: {
      type: "number",
      format: "float",
    },
    training_load: {
      type: "integer",
      format: "int32",
    },
    srpe: {
      type: "integer",
      format: "int32",
    },
    distance: {
      type: "number",
      format: "float",
    },
    eftp: {
      type: "number",
      format: "float",
    },
    eftpPerKg: {
      type: "number",
      format: "float",
    },
    date: {
      type: "string",
    },
    athlete_id: {
      type: "string",
    },
    athlete_name: {
      type: "string",
    },
    email: {
      type: "string",
    },
    external_id: {
      type: "string",
    },
    fitness: {
      type: "number",
      format: "float",
    },
    fatigue: {
      type: "number",
      format: "float",
    },
    form: {
      type: "number",
      format: "float",
    },
    rampRate: {
      type: "number",
      format: "float",
    },
    weight: {
      type: "number",
      format: "float",
    },
    timeInZones: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    timeInZonesTot: {
      type: "integer",
      format: "int32",
    },
    byCategory: {
      type: "array",
      items: {
        $ref: "#/components/schemas/CategorySummary",
      },
    },
    mostRecentWellnessId: {
      type: "string",
    },
  },
} as const;

export const ActivityPowerCurveSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    start_date_local: {
      type: "string",
    },
    weight: {
      type: "number",
      format: "float",
    },
    watts: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
  },
} as const;

export const ActivityPowerCurvePayloadSchema = {
  type: "object",
  properties: {
    after_kj: {
      type: "integer",
      format: "int32",
    },
    secs: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    curves: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ActivityPowerCurve",
      },
    },
  },
} as const;

export const ActivityHRCurveSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    start_date_local: {
      type: "string",
    },
    weight: {
      type: "number",
      format: "float",
    },
    bpm: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
  },
} as const;

export const ActivityHRCurvePayloadSchema = {
  type: "object",
  properties: {
    secs: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    curves: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ActivityHRCurve",
      },
    },
  },
} as const;

export const ActivitySearchResultSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    start_date_local: {
      type: "string",
    },
    type: {
      type: "string",
    },
    race: {
      type: "boolean",
    },
    distance: {
      type: "number",
      format: "float",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    tags: {
      type: "array",
      items: {
        type: "string",
      },
    },
    description: {
      type: "string",
    },
  },
} as const;

export const WithSportSettingsSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    firstname: {
      type: "string",
    },
    lastname: {
      type: "string",
    },
    profile_medium: {
      type: "string",
    },
    measurement_preference: {
      type: "string",
    },
    weight_pref_lb: {
      type: "boolean",
    },
    fahrenheit: {
      type: "boolean",
    },
    wind_speed: {
      type: "string",
      enum: ["MPS", "KNOTS", "KMH", "MPH", "BFT"],
    },
    rain: {
      type: "string",
      enum: ["MM", "INCHES"],
    },
    weight: {
      type: "number",
      format: "float",
    },
    email: {
      type: "string",
    },
    sex: {
      type: "string",
    },
    city: {
      type: "string",
    },
    state: {
      type: "string",
    },
    country: {
      type: "string",
    },
    bikes: {
      type: "array",
      items: {
        $ref: "#/components/schemas/StravaGear",
      },
    },
    shoes: {
      type: "array",
      items: {
        $ref: "#/components/schemas/StravaGear",
      },
    },
    timezone: {
      type: "string",
    },
    locale: {
      type: "string",
    },
    visibility: {
      type: "string",
      enum: ["PRIVATE", "PUBLIC", "HIDDEN"],
    },
    icu_resting_hr: {
      type: "integer",
      format: "int32",
    },
    icu_weight: {
      type: "number",
      format: "float",
    },
    icu_weight_sync: {
      type: "string",
      enum: ["NONE", "STRAVA"],
    },
    icu_last_seen: {
      type: "string",
      format: "date-time",
    },
    icu_activated: {
      type: "string",
      format: "date-time",
    },
    icu_queue_pos: {
      type: "integer",
      format: "int32",
    },
    icu_admin: {
      type: "boolean",
    },
    icu_friend_invite_token: {
      type: "string",
    },
    icu_permission: {
      type: "string",
      enum: ["NONE", "READ", "WRITE"],
    },
    icu_effort_secs: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    icu_coach: {
      type: "boolean",
    },
    bio: {
      type: "string",
    },
    website: {
      type: "string",
    },
    icu_date_of_birth: {
      type: "string",
    },
    icu_api_key: {
      type: "string",
    },
    icu_type_settings: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Settings",
      },
    },
    icu_form_as_percent: {
      type: "boolean",
    },
    icu_mmp_days: {
      type: "integer",
      format: "int32",
    },
    icu_wellness_prompt: {
      type: "boolean",
    },
    icu_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    icu_track_menstrual_cycle: {
      type: "boolean",
    },
    icu_menstrual_cycle_perm: {
      type: "string",
      enum: ["NONE", "READ", "WRITE"],
    },
    coach_ticks: {
      type: "array",
      items: {
        $ref: "#/components/schemas/CoachTick",
      },
    },
    icu_garmin_health: {
      type: "boolean",
    },
    icu_garmin_training: {
      type: "boolean",
    },
    icu_garmin_sync_activities: {
      type: "boolean",
    },
    garmin_sync_activity_types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    garmin_sync_after: {
      type: "string",
      format: "date-time",
    },
    icu_garmin_download_wellness: {
      type: "boolean",
    },
    icu_garmin_upload_workouts: {
      type: "boolean",
    },
    icu_garmin_outdoor_power_range: {
      type: "number",
      format: "float",
    },
    icu_garmin_hr_range: {
      type: "number",
      format: "float",
    },
    garmin_pace_range: {
      type: "number",
      format: "float",
    },
    garmin_power_target: {
      type: "string",
      enum: ["POWER_LAP", "POWER", "POWER_3S", "POWER_10S", "POWER_30S"],
    },
    icu_garmin_last_upload: {
      type: "string",
      format: "date-time",
    },
    icu_garmin_upload_filters: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ActivityFilter",
      },
    },
    icu_garmin_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    open_step_duration: {
      type: "integer",
      format: "int32",
    },
    polar_scope: {
      type: "string",
    },
    polar_sync_activities: {
      type: "boolean",
    },
    polar_sync_activity_types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    polar_download_wellness: {
      type: "boolean",
    },
    polar_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    suunto_scope: {
      type: "string",
    },
    suunto_user_id: {
      type: "string",
    },
    suunto_sync_activities: {
      type: "boolean",
    },
    suunto_sync_activity_types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    suunto_upload_workouts: {
      type: "boolean",
    },
    suunto_outdoor_power_range: {
      type: "number",
      format: "float",
    },
    suunto_hr_range: {
      type: "number",
      format: "float",
    },
    suunto_pace_range: {
      type: "number",
      format: "float",
    },
    suunto_last_upload: {
      type: "string",
      format: "date-time",
    },
    suunto_upload_filters: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ActivityFilter",
      },
    },
    suunto_download_wellness: {
      type: "boolean",
    },
    coros_user_id: {
      type: "string",
    },
    coros_sync_activities: {
      type: "boolean",
    },
    coros_upload_workouts: {
      type: "boolean",
    },
    coros_download_wellness: {
      type: "boolean",
    },
    coros_last_upload: {
      type: "string",
      format: "date-time",
    },
    zepp_user_id: {
      type: "string",
    },
    zepp_sync_activities: {
      type: "boolean",
    },
    zepp_upload_workouts: {
      type: "boolean",
    },
    zepp_download_wellness: {
      type: "boolean",
    },
    wahoo_user_id: {
      type: "string",
    },
    wahoo_sync_activities: {
      type: "boolean",
    },
    wahoo_upload_workouts: {
      type: "boolean",
    },
    zwift_user_id: {
      type: "string",
    },
    zwift_sync_activities: {
      type: "boolean",
    },
    zwift_upload_workouts: {
      type: "boolean",
    },
    dropbox_scope: {
      type: "string",
    },
    oura_scope: {
      type: "string",
    },
    oura_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    whoop_scope: {
      type: "string",
    },
    whoop_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    google_scope: {
      type: "string",
    },
    google_wellness_keys: {
      type: "array",
      items: {
        type: "string",
      },
    },
    icu_email_verified: {
      type: "boolean",
    },
    icu_email_disabled: {
      type: "string",
    },
    icu_send_achievements: {
      type: "boolean",
    },
    icu_send_newsletter: {
      type: "boolean",
    },
    icu_send_private_chat: {
      type: "boolean",
    },
    icu_send_private_msg: {
      type: "boolean",
    },
    icu_send_follow_req: {
      type: "boolean",
    },
    icu_send_group_chat: {
      type: "boolean",
    },
    icu_send_group_msg: {
      type: "boolean",
    },
    icu_send_activity_chat: {
      type: "boolean",
    },
    icu_send_followed_activity_chat: {
      type: "boolean",
    },
    icu_send_coached_activity_chat: {
      type: "boolean",
    },
    icu_send_activity_msg: {
      type: "boolean",
    },
    icu_send_coach_me_req: {
      type: "boolean",
    },
    icu_send_gear_alerts: {
      type: "boolean",
    },
    icu_send_plan_for_week: {
      type: "boolean",
    },
    include_descr_in_plan_for_week: {
      type: "boolean",
    },
    icu_send_followed_new_activity: {
      type: "boolean",
    },
    icu_send_coached_new_activity: {
      type: "boolean",
    },
    icu_send_coach_tick: {
      type: "boolean",
    },
    strava_allowed: {
      type: "boolean",
    },
    strava_id: {
      type: "integer",
      format: "int32",
    },
    scope: {
      type: "string",
    },
    strava_sync_activities: {
      type: "boolean",
    },
    strava_sync_activity_types: {
      type: "array",
      items: {
        type: "string",
        enum: [
          "Ride",
          "Run",
          "Swim",
          "WeightTraining",
          "Hike",
          "Walk",
          "AlpineSki",
          "BackcountrySki",
          "Badminton",
          "Canoeing",
          "Crossfit",
          "EBikeRide",
          "EMountainBikeRide",
          "Elliptical",
          "Golf",
          "GravelRide",
          "TrackRide",
          "Handcycle",
          "HighIntensityIntervalTraining",
          "Hockey",
          "IceSkate",
          "InlineSkate",
          "Kayaking",
          "Kitesurf",
          "MountainBikeRide",
          "NordicSki",
          "OpenWaterSwim",
          "Padel",
          "Pilates",
          "Pickleball",
          "Racquetball",
          "Rugby",
          "RockClimbing",
          "RollerSki",
          "Rowing",
          "Sail",
          "Skateboard",
          "Snowboard",
          "Snowshoe",
          "Soccer",
          "Squash",
          "StairStepper",
          "StandUpPaddling",
          "Surfing",
          "TableTennis",
          "Tennis",
          "TrailRun",
          "Transition",
          "Velomobile",
          "VirtualRide",
          "VirtualRow",
          "VirtualRun",
          "WaterSport",
          "Wheelchair",
          "Windsurf",
          "Workout",
          "Yoga",
          "Other",
        ],
      },
    },
    strava_sync_other_activities: {
      type: "boolean",
    },
    ignore_strava_gear: {
      type: "boolean",
    },
    update_strava_name: {
      type: "boolean",
    },
    add_weather_to_strava_descr: {
      type: "boolean",
    },
    height: {
      type: "number",
      format: "float",
    },
    height_units: {
      type: "string",
      enum: ["CM", "FEET"],
    },
    plan: {
      type: "string",
      enum: ["FREE", "PREMIUM", "SUPPORTER", "WHITELABEL"],
    },
    plan_expires: {
      type: "string",
      format: "date-time",
    },
    trial_end_date: {
      type: "string",
      format: "date-time",
    },
    sponsored_by_chat_id: {
      type: "integer",
      format: "int32",
    },
    has_password: {
      type: "boolean",
    },
    beta_user: {
      type: "boolean",
    },
    currency: {
      type: "string",
    },
    training_plan_id: {
      type: "integer",
      format: "int32",
    },
    training_plan_start_date: {
      type: "string",
    },
    strava_authorized: {
      type: "boolean",
    },
    sportSettings: {
      type: "array",
      items: {
        $ref: "#/components/schemas/SportSettings",
      },
    },
    custom_items: {
      type: "array",
      items: {
        $ref: "#/components/schemas/CustomItem",
      },
    },
  },
} as const;

export const ActivityMiniSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    start_date_local: {
      type: "string",
    },
    type: {
      type: "string",
    },
    name: {
      type: "string",
    },
  },
} as const;

export const ActivityWeatherSummarySchema = {
  type: "object",
  properties: {
    start_index: {
      type: "integer",
      format: "int32",
    },
    end_index: {
      type: "integer",
      format: "int32",
    },
    start_secs: {
      type: "integer",
      format: "int32",
    },
    end_secs: {
      type: "integer",
      format: "int32",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    whole_activity: {
      type: "boolean",
    },
    wind_speed: {
      $ref: "#/components/schemas/WindRose",
    },
    wind_gust: {
      $ref: "#/components/schemas/WindRose",
    },
    apparent_wind_speed: {
      $ref: "#/components/schemas/WindRose",
    },
    apparent_wind_gust: {
      $ref: "#/components/schemas/WindRose",
    },
    average_temp: {
      type: "number",
      format: "float",
    },
    min_temp: {
      type: "integer",
      format: "int32",
    },
    max_temp: {
      type: "integer",
      format: "int32",
    },
    average_weather_temp: {
      type: "number",
      format: "float",
    },
    min_weather_temp: {
      type: "number",
      format: "float",
    },
    max_weather_temp: {
      type: "number",
      format: "float",
    },
    average_feels_like: {
      type: "number",
      format: "float",
    },
    min_feels_like: {
      type: "number",
      format: "float",
    },
    max_feels_like: {
      type: "number",
      format: "float",
    },
    average_wind_speed: {
      type: "number",
      format: "float",
    },
    min_wind_speed: {
      type: "number",
      format: "float",
    },
    max_wind_speed: {
      type: "number",
      format: "float",
    },
    average_wind_gust: {
      type: "number",
      format: "float",
    },
    min_wind_gust: {
      type: "number",
      format: "float",
    },
    max_wind_gust: {
      type: "number",
      format: "float",
    },
    prevailing_wind_deg: {
      type: "integer",
      format: "int32",
    },
    average_yaw: {
      type: "number",
      format: "float",
    },
    headwind_percent: {
      type: "number",
      format: "float",
    },
    tailwind_percent: {
      type: "number",
      format: "float",
    },
    max_rain: {
      type: "number",
      format: "float",
    },
    max_showers: {
      type: "number",
      format: "float",
    },
    max_snow: {
      type: "number",
      format: "float",
    },
    average_clouds: {
      type: "integer",
      format: "int32",
    },
    description: {
      type: "string",
    },
  },
} as const;

export const WindRoseSchema = {
  type: "object",
  properties: {
    avg_speed: {
      type: "array",
      items: {
        type: "number",
        format: "float",
      },
    },
    count: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
  },
} as const;

export const PlotSchema = {
  type: "object",
  properties: {
    max_bpm: {
      type: "integer",
      format: "int32",
    },
    min_bpm: {
      type: "integer",
      format: "int32",
    },
    secs: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    cumulative_secs: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
  },
} as const;

export const ActivityStreamSchema = {
  type: "object",
  properties: {
    type: {
      type: "string",
    },
    name: {
      type: "string",
    },
    data: {
      type: "object",
    },
    data2: {
      type: "object",
    },
    valueTypeIsArray: {
      type: "boolean",
    },
    anomalies: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Anomaly",
      },
    },
    custom: {
      type: "boolean",
    },
  },
} as const;

export const AnomalySchema = {
  type: "object",
  properties: {
    start_index: {
      type: "integer",
      format: "int32",
    },
    end_index: {
      type: "integer",
      format: "int32",
    },
    value: {
      type: "integer",
      format: "int32",
    },
    valueEnd: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const IcuSegmentSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int64",
    },
    start_index: {
      type: "integer",
      format: "int32",
    },
    end_index: {
      type: "integer",
      format: "int32",
    },
    name: {
      type: "string",
    },
    segment_id: {
      type: "integer",
      format: "int64",
    },
    starred: {
      type: "boolean",
    },
  },
} as const;

export const BucketSchema = {
  type: "object",
  properties: {
    start: {
      type: "integer",
      format: "int32",
    },
    secs: {
      type: "integer",
      format: "int32",
    },
    movingSecs: {
      type: "integer",
      format: "int32",
    },
    watts: {
      type: "number",
      format: "double",
    },
    hr: {
      type: "number",
      format: "double",
    },
    cadence: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const CurveSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    coefficients: {
      type: "array",
      items: {
        type: "number",
        format: "double",
      },
    },
    r2: {
      type: "number",
      format: "double",
    },
  },
} as const;

export const PowerVsHRPlotSchema = {
  type: "object",
  properties: {
    bucketSize: {
      type: "integer",
      format: "int32",
    },
    warmup: {
      type: "integer",
      format: "int32",
    },
    cooldown: {
      type: "integer",
      format: "int32",
    },
    elapsedTime: {
      type: "integer",
      format: "int32",
    },
    hrLag: {
      type: "integer",
      format: "int32",
    },
    powerHr: {
      type: "number",
      format: "float",
    },
    powerHrFirst: {
      type: "number",
      format: "float",
    },
    powerHrSecond: {
      type: "number",
      format: "float",
    },
    decoupling: {
      type: "number",
      format: "float",
    },
    powerHrZ2: {
      type: "number",
      format: "float",
    },
    medianCadenceZ2: {
      type: "integer",
      format: "int32",
    },
    avgCadenceZ2: {
      type: "integer",
      format: "int32",
    },
    hrZ2BucketCount: {
      type: "integer",
      format: "int32",
    },
    start: {
      type: "integer",
      format: "int32",
    },
    mid: {
      type: "integer",
      format: "int32",
    },
    end: {
      type: "integer",
      format: "int32",
    },
    series: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Bucket",
      },
    },
    curves: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Curve",
      },
    },
    ratioCoefficients: {
      type: "array",
      items: {
        type: "number",
        format: "double",
      },
    },
  },
} as const;

export const PowerCurveSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    after_kj: {
      type: "integer",
      format: "int32",
    },
    filters: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ActivityFilter",
      },
    },
    label: {
      type: "string",
    },
    filter_label: {
      type: "string",
    },
    percentile: {
      type: "number",
      format: "float",
    },
    start_date_local: {
      type: "string",
    },
    end_date_local: {
      type: "string",
    },
    days: {
      type: "integer",
      format: "int32",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    training_load: {
      type: "integer",
      format: "int32",
    },
    weight: {
      type: "number",
      format: "float",
    },
    secs: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    values: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    submax_values: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "integer",
          format: "int32",
        },
      },
    },
    submax_activity_id: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "string",
        },
      },
    },
    start_index: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    end_index: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    activity_id: {
      type: "array",
      items: {
        type: "string",
      },
    },
    watts_per_kg: {
      type: "array",
      items: {
        type: "number",
        format: "float",
      },
    },
    wkg_activity_id: {
      type: "array",
      items: {
        type: "string",
      },
    },
    submax_watts_per_kg: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "number",
          format: "float",
        },
      },
    },
    submax_wkg_activity_id: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "string",
        },
      },
    },
    powerModels: {
      type: "array",
      items: {
        $ref: "#/components/schemas/PowerModel",
      },
    },
    ranks: {
      type: "object",
      additionalProperties: {
        $ref: "#/components/schemas/Rank",
      },
    },
    mapPlot: {
      $ref: "#/components/schemas/Plot",
    },
    stream_type: {
      type: "string",
    },
    stream_name: {
      type: "string",
    },
    watts: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    vo2max_5m: {
      type: "number",
      format: "float",
    },
    compound_score_5m: {
      type: "number",
      format: "float",
    },
  },
} as const;

export const RankSchema = {
  type: "object",
  properties: {
    position: {
      type: "object",
      additionalProperties: {
        type: "number",
        format: "float",
      },
    },
    watts: {
      type: "object",
      additionalProperties: {
        type: "number",
        format: "float",
      },
    },
  },
} as const;

export const PaceCurveSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    filters: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ActivityFilter",
      },
    },
    label: {
      type: "string",
    },
    filter_label: {
      type: "string",
    },
    percentile: {
      type: "number",
      format: "float",
    },
    start_date_local: {
      type: "string",
    },
    end_date_local: {
      type: "string",
    },
    days: {
      type: "integer",
      format: "int32",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    training_load: {
      type: "integer",
      format: "int32",
    },
    weight: {
      type: "number",
      format: "float",
    },
    distance: {
      type: "array",
      items: {
        type: "number",
        format: "float",
      },
    },
    values: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    submax_values: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "integer",
          format: "int32",
        },
      },
    },
    submax_activity_id: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "string",
        },
      },
    },
    start_index: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    end_index: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    activity_id: {
      type: "array",
      items: {
        type: "string",
      },
    },
    type: {
      type: "string",
      enum: ["POWER", "HR", "PACE", "GAP"],
    },
    paceModels: {
      type: "array",
      items: {
        $ref: "#/components/schemas/PaceModel",
      },
    },
  },
} as const;

export const PaceModelSchema = {
  type: "object",
  properties: {
    type: {
      type: "string",
      enum: ["CS"],
    },
    criticalSpeed: {
      type: "number",
      format: "float",
    },
    dPrime: {
      type: "number",
      format: "float",
    },
    r2: {
      type: "number",
      format: "float",
    },
    inputPointIndexes: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
  },
} as const;

export const MessageSchema = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      format: "int64",
    },
    athlete_id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    created: {
      type: "string",
      format: "date-time",
    },
    type: {
      type: "string",
      enum: [
        "TEXT",
        "FOLLOW_REQ",
        "COACH_REQ",
        "COACH_ME_REQ",
        "ACTIVITY",
        "NOTE",
        "JOIN_REQ",
        "ACCEPT_COACHING_GROUP",
      ],
    },
    content: {
      type: "string",
    },
    activity_id: {
      type: "string",
    },
    start_index: {
      type: "integer",
      format: "int32",
    },
    end_index: {
      type: "integer",
      format: "int32",
    },
    answer: {
      type: "string",
    },
    activity: {
      $ref: "#/components/schemas/Activity",
    },
    attachment_url: {
      type: "string",
    },
    attachment_mime_type: {
      type: "string",
    },
    deleted: {
      type: "string",
      format: "date-time",
    },
    deleted_by_id: {
      type: "string",
    },
    join_group_id: {
      type: "integer",
      format: "int32",
    },
    accept_coaching_group_id: {
      type: "integer",
      format: "int32",
    },
    seen: {
      type: "boolean",
    },
  },
} as const;

export const ActivityWeatherSchema = {
  type: "object",
  properties: {
    points: {
      type: "array",
      items: {
        $ref: "#/components/schemas/WeatherPoint",
      },
    },
    closest_points: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Closest",
      },
    },
  },
} as const;

export const ClosestSchema = {
  type: "object",
  properties: {
    start_secs: {
      type: "integer",
      format: "int32",
    },
    p1_index: {
      type: "integer",
      format: "int32",
    },
    p2_index: {
      type: "integer",
      format: "int32",
    },
    p3_index: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const MapDataSchema = {
  type: "object",
  properties: {
    bounds: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "number",
          format: "float",
        },
      },
    },
    latlngs: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "number",
          format: "float",
        },
      },
    },
    route: {
      $ref: "#/components/schemas/AthleteRoute",
    },
    weather: {
      $ref: "#/components/schemas/ActivityWeather",
    },
  },
} as const;

export const TimeSchema = {
  type: "object",
  properties: {
    start_secs: {
      type: "integer",
      format: "int32",
    },
    end_secs: {
      type: "integer",
      format: "int32",
    },
    index: {
      type: "integer",
      format: "int32",
    },
    temp: {
      type: "number",
      format: "float",
    },
    feels_like: {
      type: "number",
      format: "float",
    },
    humidity: {
      type: "integer",
      format: "int32",
    },
    wind_speed: {
      type: "number",
      format: "float",
    },
    wind_deg: {
      type: "integer",
      format: "int32",
    },
    wind_gust: {
      type: "number",
      format: "float",
    },
    rain: {
      type: "number",
      format: "float",
    },
    showers: {
      type: "number",
      format: "float",
    },
    snow: {
      type: "number",
      format: "float",
    },
    clouds: {
      type: "integer",
      format: "int32",
    },
    pressure: {
      type: "number",
      format: "float",
    },
    weather_code: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const WeatherPointSchema = {
  type: "object",
  properties: {
    latitude: {
      type: "number",
      format: "float",
    },
    longitude: {
      type: "number",
      format: "float",
    },
    times: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Time",
      },
    },
  },
} as const;

export const HRLoadModelSchema = {
  type: "object",
  properties: {
    type: {
      type: "string",
      enum: ["AVG_HR", "HR_ZONES", "HRSS"],
    },
    icu_training_load: {
      type: "integer",
      format: "int32",
    },
    trainingDataCount: {
      type: "integer",
      format: "int32",
    },
  },
} as const;

export const HRCurveSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    filters: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ActivityFilter",
      },
    },
    label: {
      type: "string",
    },
    filter_label: {
      type: "string",
    },
    percentile: {
      type: "number",
      format: "float",
    },
    start_date_local: {
      type: "string",
    },
    end_date_local: {
      type: "string",
    },
    days: {
      type: "integer",
      format: "int32",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    training_load: {
      type: "integer",
      format: "int32",
    },
    weight: {
      type: "number",
      format: "float",
    },
    secs: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    values: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    submax_values: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "integer",
          format: "int32",
        },
      },
    },
    submax_activity_id: {
      type: "array",
      items: {
        type: "array",
        items: {
          type: "string",
        },
      },
    },
    start_index: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    end_index: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    activity_id: {
      type: "array",
      items: {
        type: "string",
      },
    },
  },
} as const;

export const BestEffortsSchema = {
  type: "object",
  properties: {
    efforts: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Effort",
      },
    },
  },
} as const;

export const EffortSchema = {
  type: "object",
  properties: {
    start_index: {
      type: "integer",
      format: "int32",
    },
    end_index: {
      type: "integer",
      format: "int32",
    },
    average: {
      type: "number",
      format: "float",
    },
    duration: {
      type: "integer",
      format: "int32",
    },
    distance: {
      type: "number",
      format: "float",
    },
  },
} as const;

export const ActivityWithIntervalsSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    start_date_local: {
      type: "string",
    },
    type: {
      type: "string",
    },
    icu_ignore_time: {
      type: "boolean",
    },
    icu_pm_cp: {
      type: "integer",
      format: "int32",
    },
    icu_pm_w_prime: {
      type: "integer",
      format: "int32",
    },
    icu_pm_p_max: {
      type: "integer",
      format: "int32",
    },
    icu_pm_ftp: {
      type: "integer",
      format: "int32",
    },
    icu_pm_ftp_secs: {
      type: "integer",
      format: "int32",
    },
    icu_pm_ftp_watts: {
      type: "integer",
      format: "int32",
    },
    icu_ignore_power: {
      type: "boolean",
    },
    icu_rolling_cp: {
      type: "number",
      format: "float",
    },
    icu_rolling_w_prime: {
      type: "number",
      format: "float",
    },
    icu_rolling_p_max: {
      type: "number",
      format: "float",
    },
    icu_rolling_ftp: {
      type: "integer",
      format: "int32",
    },
    icu_rolling_ftp_delta: {
      type: "integer",
      format: "int32",
    },
    icu_training_load: {
      type: "integer",
      format: "int32",
    },
    icu_atl: {
      type: "number",
      format: "float",
    },
    icu_ctl: {
      type: "number",
      format: "float",
    },
    paired_event_id: {
      type: "integer",
      format: "int32",
    },
    icu_ftp: {
      type: "integer",
      format: "int32",
    },
    icu_joules: {
      type: "integer",
      format: "int32",
    },
    icu_recording_time: {
      type: "integer",
      format: "int32",
    },
    elapsed_time: {
      type: "integer",
      format: "int32",
    },
    icu_weighted_avg_watts: {
      type: "integer",
      format: "int32",
    },
    carbs_used: {
      type: "integer",
      format: "int32",
    },
    name: {
      type: "string",
    },
    description: {
      type: "string",
    },
    start_date: {
      type: "string",
    },
    distance: {
      type: "number",
      format: "float",
    },
    icu_distance: {
      type: "number",
      format: "float",
    },
    moving_time: {
      type: "integer",
      format: "int32",
    },
    coasting_time: {
      type: "integer",
      format: "int32",
    },
    total_elevation_gain: {
      type: "number",
      format: "float",
    },
    total_elevation_loss: {
      type: "number",
      format: "float",
    },
    timezone: {
      type: "string",
    },
    trainer: {
      type: "boolean",
    },
    sub_type: {
      type: "string",
      enum: ["NONE", "COMMUTE", "WARMUP", "COOLDOWN", "RACE"],
    },
    commute: {
      type: "boolean",
    },
    race: {
      type: "boolean",
    },
    max_speed: {
      type: "number",
      format: "float",
    },
    average_speed: {
      type: "number",
      format: "float",
    },
    device_watts: {
      type: "boolean",
    },
    has_heartrate: {
      type: "boolean",
    },
    max_heartrate: {
      type: "integer",
      format: "int32",
    },
    average_heartrate: {
      type: "integer",
      format: "int32",
    },
    average_cadence: {
      type: "number",
      format: "float",
    },
    calories: {
      type: "integer",
      format: "int32",
    },
    average_temp: {
      type: "number",
      format: "float",
    },
    min_temp: {
      type: "integer",
      format: "int32",
    },
    max_temp: {
      type: "integer",
      format: "int32",
    },
    avg_lr_balance: {
      type: "number",
      format: "float",
    },
    gap: {
      type: "number",
      format: "float",
    },
    gap_model: {
      type: "string",
      enum: ["NONE", "STRAVA_RUN"],
    },
    use_elevation_correction: {
      type: "boolean",
    },
    gear: {
      $ref: "#/components/schemas/StravaGear",
    },
    perceived_exertion: {
      type: "number",
      format: "float",
    },
    device_name: {
      type: "string",
    },
    power_meter: {
      type: "string",
    },
    power_meter_serial: {
      type: "string",
    },
    power_meter_battery: {
      type: "string",
    },
    crank_length: {
      type: "number",
      format: "float",
    },
    external_id: {
      type: "string",
    },
    file_sport_index: {
      type: "integer",
      format: "int32",
    },
    file_type: {
      type: "string",
    },
    icu_athlete_id: {
      type: "string",
    },
    created: {
      type: "string",
      format: "date-time",
    },
    icu_sync_date: {
      type: "string",
      format: "date-time",
    },
    analyzed: {
      type: "string",
      format: "date-time",
    },
    icu_w_prime: {
      type: "integer",
      format: "int32",
    },
    threshold_pace: {
      type: "number",
      format: "float",
    },
    icu_hr_zones: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    pace_zones: {
      type: "array",
      items: {
        type: "number",
        format: "float",
      },
    },
    lthr: {
      type: "integer",
      format: "int32",
    },
    icu_resting_hr: {
      type: "integer",
      format: "int32",
    },
    icu_weight: {
      type: "number",
      format: "float",
    },
    icu_power_zones: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    icu_sweet_spot_min: {
      type: "integer",
      format: "int32",
    },
    icu_sweet_spot_max: {
      type: "integer",
      format: "int32",
    },
    icu_power_spike_threshold: {
      type: "integer",
      format: "int32",
    },
    trimp: {
      type: "number",
      format: "float",
    },
    icu_warmup_time: {
      type: "integer",
      format: "int32",
    },
    icu_cooldown_time: {
      type: "integer",
      format: "int32",
    },
    icu_chat_id: {
      type: "integer",
      format: "int32",
    },
    icu_ignore_hr: {
      type: "boolean",
    },
    ignore_velocity: {
      type: "boolean",
    },
    ignore_pace: {
      type: "boolean",
    },
    ignore_parts: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Ignore",
      },
    },
    icu_training_load_data: {
      type: "integer",
      format: "int32",
    },
    interval_summary: {
      type: "array",
      items: {
        type: "string",
      },
    },
    skyline_chart_bytes: {
      type: "array",
      items: {
        type: "string",
        format: "byte",
      },
    },
    stream_types: {
      type: "array",
      items: {
        type: "string",
      },
    },
    has_weather: {
      type: "boolean",
    },
    has_segments: {
      type: "boolean",
    },
    power_field_names: {
      type: "array",
      items: {
        type: "string",
      },
    },
    power_field: {
      type: "string",
    },
    icu_zone_times: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ZoneTime",
      },
    },
    icu_hr_zone_times: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    pace_zone_times: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    gap_zone_times: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    use_gap_zone_times: {
      type: "boolean",
    },
    tiz_order: {
      type: "string",
      enum: [
        "POWER_HR_PACE",
        "POWER_PACE_HR",
        "HR_POWER_PACE",
        "HR_PACE_POWER",
        "PACE_POWER_HR",
        "PACE_HR_POWER",
      ],
    },
    polarization_index: {
      type: "number",
      format: "float",
    },
    icu_achievements: {
      type: "array",
      items: {
        $ref: "#/components/schemas/IcuAchievement",
      },
    },
    icu_intervals_edited: {
      type: "boolean",
    },
    lock_intervals: {
      type: "boolean",
    },
    icu_lap_count: {
      type: "integer",
      format: "int32",
    },
    icu_joules_above_ftp: {
      type: "integer",
      format: "int32",
    },
    icu_max_wbal_depletion: {
      type: "integer",
      format: "int32",
    },
    icu_hrr: {
      $ref: "#/components/schemas/HRRecovery",
    },
    icu_sync_error: {
      type: "string",
    },
    icu_color: {
      type: "string",
    },
    icu_power_hr_z2: {
      type: "number",
      format: "float",
    },
    icu_power_hr_z2_mins: {
      type: "integer",
      format: "int32",
    },
    icu_cadence_z2: {
      type: "integer",
      format: "int32",
    },
    icu_rpe: {
      type: "integer",
      format: "int32",
    },
    feel: {
      type: "integer",
      format: "int32",
    },
    kg_lifted: {
      type: "number",
      format: "float",
    },
    decoupling: {
      type: "number",
      format: "float",
    },
    icu_median_time_delta: {
      type: "integer",
      format: "int32",
    },
    p30s_exponent: {
      type: "number",
      format: "float",
    },
    workout_shift_secs: {
      type: "integer",
      format: "int32",
    },
    strava_id: {
      type: "string",
    },
    lengths: {
      type: "integer",
      format: "int32",
    },
    pool_length: {
      type: "number",
      format: "float",
    },
    compliance: {
      type: "number",
      format: "float",
    },
    coach_tick: {
      type: "integer",
      format: "int32",
    },
    source: {
      type: "string",
      enum: [
        "STRAVA",
        "UPLOAD",
        "MANUAL",
        "GARMIN_CONNECT",
        "OAUTH_CLIENT",
        "DROPBOX",
        "POLAR",
        "SUUNTO",
        "COROS",
        "WAHOO",
        "ZWIFT",
        "ZEPP",
      ],
    },
    oauth_client_id: {
      type: "integer",
      format: "int32",
    },
    oauth_client_name: {
      type: "string",
    },
    average_altitude: {
      type: "number",
      format: "float",
    },
    min_altitude: {
      type: "number",
      format: "float",
    },
    max_altitude: {
      type: "number",
      format: "float",
    },
    power_load: {
      type: "integer",
      format: "int32",
    },
    hr_load: {
      type: "integer",
      format: "int32",
    },
    pace_load: {
      type: "integer",
      format: "int32",
    },
    hr_load_type: {
      type: "string",
      enum: ["AVG_HR", "HR_ZONES", "HRSS"],
    },
    pace_load_type: {
      type: "string",
      enum: ["SWIM", "RUN"],
    },
    tags: {
      type: "array",
      items: {
        type: "string",
      },
    },
    attachments: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Attachment",
      },
    },
    recording_stops: {
      type: "array",
      items: {
        type: "integer",
        format: "int32",
      },
    },
    average_weather_temp: {
      type: "number",
      format: "float",
    },
    min_weather_temp: {
      type: "number",
      format: "float",
    },
    max_weather_temp: {
      type: "number",
      format: "float",
    },
    average_feels_like: {
      type: "number",
      format: "float",
    },
    min_feels_like: {
      type: "number",
      format: "float",
    },
    max_feels_like: {
      type: "number",
      format: "float",
    },
    average_wind_speed: {
      type: "number",
      format: "float",
    },
    average_wind_gust: {
      type: "number",
      format: "float",
    },
    prevailing_wind_deg: {
      type: "integer",
      format: "int32",
    },
    headwind_percent: {
      type: "number",
      format: "float",
    },
    tailwind_percent: {
      type: "number",
      format: "float",
    },
    average_clouds: {
      type: "integer",
      format: "int32",
    },
    max_rain: {
      type: "number",
      format: "float",
    },
    max_snow: {
      type: "number",
      format: "float",
    },
    carbs_ingested: {
      type: "integer",
      format: "int32",
    },
    route_id: {
      type: "integer",
      format: "int64",
    },
    pace: {
      type: "number",
      format: "float",
    },
    athlete_max_hr: {
      type: "integer",
      format: "int32",
    },
    group: {
      type: "string",
    },
    icu_intensity: {
      type: "number",
      format: "float",
    },
    icu_efficiency_factor: {
      type: "number",
      format: "float",
    },
    icu_power_hr: {
      type: "number",
      format: "float",
    },
    session_rpe: {
      type: "integer",
      format: "int32",
    },
    average_stride: {
      type: "number",
      format: "float",
    },
    icu_average_watts: {
      type: "integer",
      format: "int32",
    },
    icu_variability_index: {
      type: "number",
      format: "float",
    },
    icu_intervals: {
      type: "array",
      items: {
        $ref: "#/components/schemas/Interval",
      },
    },
    icu_groups: {
      type: "array",
      items: {
        $ref: "#/components/schemas/IntervalGroup",
      },
    },
  },
} as const;

export const HiddenSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    icu_athlete_id: {
      type: "string",
    },
    start_date_local: {
      type: "string",
    },
    source: {
      type: "string",
      enum: [
        "STRAVA",
        "UPLOAD",
        "MANUAL",
        "GARMIN_CONNECT",
        "OAUTH_CLIENT",
        "DROPBOX",
        "POLAR",
        "SUUNTO",
        "COROS",
        "WAHOO",
        "ZWIFT",
        "ZEPP",
      ],
    },
    _note: {
      type: "string",
    },
  },
} as const;
